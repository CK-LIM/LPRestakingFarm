{"version":3,"sources":["purse-.png","asterisk.png","pancakeswap.png","metamask-fox.svg","walletconnect-logo.svg","purse.png","components/NavMenu.js","components/Navbar.js","components/Main.js","components/Menu.js","components/1inch.js","components/Deposit.js","components/Popup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","styled","nav","_templateObject","NavLink","Link","_templateObject2","NavLink0","_templateObject3","NavLinkHome","_templateObject4","NavLink2","_templateObject5","Navb","FaBars","_templateObject6","div","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_this","this","react_default","a","createElement","className","to","onClick","window","open","src","purse","width","height","alt","props","PURSEPrice","Button","variant","size","networkName","wallet","walletConnect","DropdownButton","id","align","title","concat","first4Account","last4Account","Dropdown","Item","account","Divider","setWalletTrigger","WalletDisconnect","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","connectWallet","stop","fox","WalletConnect","walletconnectLogo","Component","Main","style","fontSize","color","minWidth","scope","poolLength","web3Bsc","utils","fromWei","purseTokenTotalSupply","totalrewardperblock","poolCapRewardToken","poolMintedRewardToken","poolRewardToken","Menu","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isShown","changeBackgroundColor","bind","assertThisInitialized","console","log","setState","_this2","ButtonGroup","Button_Button","component","purse2","purseTokenUpgradableBalance","totalpendingReward","farmLoading","poolSegmentInfo","map","key","i","indexOf","maxWidth","lpTokenSegmentAsymbol","lpTokenSegmentBsymbol","parseInt","apr","bonusMultiplier","reactjs_popup_esm","trigger","bs_index_esm","on","position","offsetY","offsetX","userSegmentInfo","pendingSegmentReward","tvl","marginTop","setTrigger","setI","type","event","preventDefault","harvest","Deposit","message","txValidAmount","txDeposit","txWithdraw","clickHandlerDeposit","clickHandlerWithdraw","result","isNaN","n","alert","pancake","onSubmit","amount","input","value","toString","toWei","bigInt","lpTokenSegmentBalance","deposit","withdraw","lpTokenSegmentAllowance","ref","placeholder","onChange","e","target","changeHandler","required","approve","asterisk","Popup","CloseButton","children","App","metamask","ethereum","request","method","then","_callee4","_context4","switchNetwork","sent","catch","err","code","error","_callee5","accounts","_context5","provider","WalletConnectProvider","rpc","97","chainId","enable","Web3","web3Con","eth","getAccounts","substring","slice","_callee6","_context6","disconnect","_callee7","_context7","params","t0","rpcUrls","chainName","nativeCurrency","name","symbol","decimals","blockExplorerUrls","t1","handleAccountsChanged","length","handleChainChanged","_ref5","_callee8","_chainId","_context8","networkId","_x","apply","arguments","delay","ms","Promise","res","setTimeout","_ref6","_callee9","lpTokenAddress","restakingFarmData","_lpTokenAddress2","_restakingFarmData2","_context9","loading","lpToken","RestakingFarm","networks","Contract","abi","address","methods","send","from","hash","componentWillMount","web3","_x2","_x3","_x4","_ref7","_callee10","_lpTokenAddress3","_lpToken","_context10","LpToken","restakingFarm","_address","_x5","_x6","_ref8","_callee11","_lpTokenAddress4","_restakingFarmData3","_context11","_x7","_x8","_x9","_ref9","_callee12","_restakingFarmData4","_restakingFarm4","_lpTokenAddress5","_context12","claimReward","_x10","_x11","pair","buttonPopup","_ref10","_callee13","_context13","_x12","purseTokenUpgradable","lpTokenSegmentInContract","loadWeb3","loadBlockchainData","purseTokenUpgradableData","PurseTokenUpgradable","totalSupply","balanceOf","capMintToken","totalMintToken","lpTokenValue","poolTokenList","poolInfo","lpTokenPair","IPancakePair","token0","lpTokenPairA","token1","lpTokenPairB","lpTokenA","lpTokenB","lpTokenInContract","lpTokenBalance","lpTokenTSupply","lpTokenPairsymbol","lpTokenAsymbol","lpTokenBsymbol","lpTokenABalanceContract","lpTokenBBalanceContract","tokenAPrice","tokenBPrice","BNBPrice","Price","WETHPrice","USDCPrice","BTCPrice","poolbonusMultiplier","pursePerBlock","toLocaleString","useGrouping","userInfo","allowance","lpTokenAllowance","pendingReward","currentProvider","fetch","response","json","myJson","toFixed","USDTPrice","BUSDPrice","maincontent","menucontent","depositcontent","oneinchcontent","components_Main","components_Menu","components_Deposit","_1inch","react_router_dom","Navbar","role","react_router","path","exact","src_components_Popup","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14c066c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/purse-.2f99ffe5.png\";","module.exports = __webpack_public_path__ + \"static/media/asterisk.d69fefca.png\";","module.exports = __webpack_public_path__ + \"static/media/pancakeswap.bdd7c45a.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask-fox.c06f3a3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/walletconnect-logo.37f2bc6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/purse.6cad2843.png\";","import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: transparent;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.5rem calc((100vw - 1100px) / 2);\r\n  z-index: 10;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #D3D3D3;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0.0rem;\r\n  height: 100%;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    color: #c37aff;\r\n  }\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: #04f7ff;\r\n  }\r\n`;\r\n\r\nexport const NavLink0 = styled(Link)`\r\n  color: #D3D3D3;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0.0rem;\r\n  height: 100%;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    color:  #D3D3D3;\r\n  }\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: #04f7ff;\r\n  }\r\n`;\r\n\r\nexport const NavLinkHome = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0.0rem;\r\n  height: 100%;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    color:  #fff;\r\n  }\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport const NavLink2 = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0.0rem;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  color: #c37aff;\r\n\r\n  &.active {\r\n    color: #c37aff;\r\n  }\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: #04f7ff;\r\n  }\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n  /* Second Nav */\r\n  /* margin-right: 24px; */\r\n\r\n  /* Third Nav */\r\n  /* width: 100vw;\r\n  white-space: nowrap; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-end;\r\n  width: 100vw; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink0 = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #256ce1;\r\n  padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n\r\n  /* Second Nav */\r\n  margin-left: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #010606;\r\n  }\r\n`;\r\nexport const NavBtnLink1 = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #ff0000;\r\n  padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n\r\n  /* Second Nav */\r\n  margin-left: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #010606;\r\n  }\r\n`;\r\nexport const NavBtnLink2 = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #228B22;\r\n  padding: 10px 22px;\r\n  color: \t#fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n\r\n  /* Second Nav */\r\n  margin-left: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #010606;\r\n  }\r\n`;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n// import Navbar from 'react-bootstrap/Navbar'\r\nimport purse from '../purse.png'\r\nimport fox from '../metamask-fox.svg'\r\nimport walletconnectLogo from '../walletconnect-logo.svg'\r\nimport Identicon from 'identicon.js';\r\nimport Button from '@material-ui/core/Button';\r\nimport Buttons from 'react-bootstrap/Button'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\n// import web3connect from 'web3connect';\r\n\r\nimport {\r\n  NavLink2,\r\n  NavLink,\r\n  NavLink0,\r\n  NavLinkHome\r\n  // Bars,\r\n  // NavMenu,\r\n  // NavBtn\r\n} from './NavMenu'\r\n\r\n\r\nclass Navb extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n\r\n        <div\r\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0 rowC\"\r\n        >\r\n          <div>\r\n            <NavLinkHome to='/menu' onClick={() => {\r\n              window.open(`https://www.pundix.com/`, '_blank')\r\n            }}>\r\n              <img src={purse} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n              &nbsp; <b>LP Restaking Farm</b></NavLinkHome></div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n          <div>\r\n            <NavLink to='/home' >Home</NavLink>\r\n          </div>&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            <NavLink to='/menu' >Menu</NavLink>\r\n          </div>&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            <NavLink0 to='/menu' onClick={() => {\r\n              window.open(`https://pundix-purse.gitbook.io/untitled/`, '_blank')\r\n            }}> Docs\r\n            </NavLink0>\r\n          </div>&nbsp;\r\n        </div>\r\n\r\n        <span>\r\n          <ul className=\"navbar-nav px-3\">\r\n            <li className=\"nav-item text-nowrap-small d-none d-sm-none d-sm-block\">\r\n              <div className=\"text-light rowC\">\r\n                <div>\r\n                  <NavLink2 to='/menu' onClick={() => {\r\n                    window.open(`https://pancakeswap.finance/swap`, '_blank')\r\n                  }}>\r\n                    <img src={purse} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />&nbsp;\r\n                    ${this.props.PURSEPrice}\r\n                  </NavLink2>\r\n                </div>&nbsp;&nbsp;\r\n                <div>\r\n                  <Buttons variant=\"info\" size=\"sm\" onClick={() => {\r\n                  }}>{this.props.networkName}\r\n                  </Buttons>\r\n                </div>&nbsp;\r\n                <div>\r\n                  {this.props.wallet||this.props.walletConnect ?\r\n                    <DropdownButton\r\n                      id=\"dropdown-menu-align-end\"\r\n                      variant=\"secondary\"\r\n                      size=\"sm\"\r\n                      align=\"end\"\r\n                      title={`${this.props.first4Account}...${this.props.last4Account}`}\r\n                    >\r\n                      <Dropdown.Item onClick={() => {\r\n                        window.open(`https://testnet.bscscan.com/address/${this.props.account}`, '_blank')\r\n                      }}\r\n                      >Wallet</Dropdown.Item>\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.Item variant=\"dark\" onClick={() => {\r\n                        this.props.setWalletTrigger(false)\r\n                        if (this.props.walletConnect == true) {\r\n                          this.props.WalletDisconnect()\r\n                        }\r\n                      }}>Disconnect</Dropdown.Item>\r\n                    </DropdownButton>\r\n                    : <DropdownButton\r\n                      id=\"dropdown-menu-align-end\"\r\n                      variant=\"secondary\"\r\n                      size=\"sm\"\r\n                      align=\"end\"\r\n                      title=\"Connect Wallet\"\r\n                    >\r\n                      <Dropdown.Item onClick={async () => {\r\n                        await this.props.connectWallet()\r\n                      }\r\n                      }><img src={fox} width=\"23\" height=\"23\" className=\"d-inline-block\" alt=\"\"/>&nbsp; Metamask</Dropdown.Item>\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.Item variant=\"dark\" onClick={() => {\r\n                        this.props.WalletConnect()\r\n                      }}><img src={walletconnectLogo} width=\"26\" height=\"23\" className=\"d-inline-block\" alt=\"\"/>&nbsp;WalletConnect</Dropdown.Item>\r\n                    </DropdownButton>}\r\n                </div>&nbsp;\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </span>\r\n      </nav>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navb;\r\n","import React, { Component } from 'react'\r\nimport asterisk from '../asterisk.png'\r\n\r\nclass Main extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"content\" className=\"mt-3\">\r\n\r\n\r\n\r\n        <label className=\"textWhite center\" style={{ fontSize : '40px' }}><big><b>Farm Info</b></big></label>\r\n\r\n        <div className=\"center\" style={{ color: 'white' }}>&nbsp;Stake <b>&nbsp;Pancakeswap or 1Inch LP Tokens&nbsp;</b> to earn PURSE!!!</div>\r\n        <br /><br />\r\n        <div className=\"card mb-4 cardbody\" style={{ minWidth: '350px' }} >\r\n          <div className=\"card-body\">\r\n            <table className=\"table table-borderless textWhiteSmall text-center\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Total Pool</th>\r\n                  <th scope=\"col\">PURSE Token Total Supply</th>\r\n                  <th scope=\"col\">Total New PURSE Reward per block</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{this.props.poolLength}</td>\r\n                  <td>{window.web3Bsc.utils.fromWei(this.props.purseTokenTotalSupply, 'Ether')} Purse</td>\r\n                  <td>{window.web3Bsc.utils.fromWei(this.props.totalrewardperblock, 'Ether')} Purse</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <br />\r\n            <table className=\"table table-borderless textWhiteSmall text-center\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Farm Cap Reward Token</th>\r\n                  <th scope=\"col\">Farm Minted Reward Token</th>\r\n                  <th scope=\"col\">Farm's Reward Token</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{window.web3Bsc.utils.fromWei(this.props.poolCapRewardToken, 'Ether')} Purse</td>\r\n                  <td>{window.web3Bsc.utils.fromWei(this.props.poolMintedRewardToken, 'Ether')} Purse</td>\r\n                  <td>{window.web3Bsc.utils.fromWei(this.props.poolRewardToken, 'Ether')} Purse</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div></div>\r\n        <br /><br /><br />\r\n\r\n        <div className=\"text\" style={{ color: 'grey' }}>&nbsp;<big>Remarks:</big></div><br />\r\n        <div className=\"text\" style={{ color: 'grey' }}>&nbsp;<small>Farm Cap Reward Token: Total capacity reward tokens will be minted by this farm.</small></div>\r\n        <div className=\"text\" style={{ color: 'grey' }}>&nbsp;<small>Farm Minted Reward Token: Total reward tokens minted by this farm until now.</small></div>\r\n        <div className=\"text\" style={{ color: 'grey' }}>&nbsp;<small>Farm's Reward Token: Total reward tokens inside this farm (smart contract).</small></div>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport purse from '../purse.png'\r\nimport purse2 from '../purse-.png'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Button from '@material-ui/core/Button';\r\nimport Buttons from 'react-bootstrap/Button'\r\nimport bigInt from 'big-integer'\r\nimport './App.css';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport { BsFillQuestionCircleFill } from 'react-icons/bs';\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isShown: false\r\n        }\r\n        this.changeBackgroundColor = this.changeBackgroundColor.bind(this)\r\n    }\r\n\r\n    changeBackgroundColor() {\r\n        console.log(\"clicked\")\r\n        this.setState({\r\n            isShown: true\r\n        })\r\n        console.log(this.state.isShown)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"content\" className=\"mt-3\">\r\n                <div className=\"text-center\">\r\n                    <ButtonGroup>\r\n                        <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/menu/\" >pancakeswap</Button>\r\n                        <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"/oneinch/\" >1inch</Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n                <br /><br />\r\n                <div className=\"center img\">\r\n                    <img src={purse2} height='90' alt=\"\" />\r\n                </div><br />\r\n                <h1 className=\"textWhite center\"><b>LP Restaking Farm</b></h1>\r\n                <div className=\"center\" style={{ color: 'silver' }}>&nbsp;Stake <b>&nbsp;Pancakeswap LP Tokens&nbsp;</b> to earn PURSE!!!</div>\r\n                <br />\r\n\r\n                <div className=\"rowC center\">\r\n                    <div className=\"card mb-4 cardbody\" style={{ minWidth: '350px', color: 'silver' }} >\r\n                        <div className=\"card-body\">\r\n                            <span>\r\n                                <span className=\"float-left\">\r\n                                    Your PURSE Balance<br /><b>{window.web3Bsc.utils.fromWei(this.props.purseTokenUpgradableBalance, 'Ether')}</b>\r\n                                    <div>\r\n                                    </div>\r\n                                </span><br /><br /><br />\r\n                            </span>\r\n                            <span>\r\n                                <small>\r\n                                    <span className=\"float-left\">Total Pending harvest</span>\r\n                                    <span className=\"float-right\">\r\n                                        <span>\r\n                                            {window.web3Bsc.utils.fromWei(this.props.totalpendingReward, 'Ether')}&nbsp;PURSE\r\n                                        </span>\r\n                                    </span>\r\n                                </small>\r\n                            </span>\r\n                        </div>\r\n                    </div> &nbsp;&nbsp;&nbsp;\r\n\r\n                    <div className=\"card mb-4 cardbody\" >\r\n                        <div className=\"card-body \" style={{ minWidth: '350px', color: 'silver' }}>\r\n                            <span>\r\n                                <span className=\"float-left\">\r\n                                    Total PURSE Supply<br /><b>{window.web3Bsc.utils.fromWei(this.props.purseTokenTotalSupply, 'Ether')}</b>\r\n                                    <div>\r\n                                    </div>\r\n                                </span><br /><br /><br />\r\n                                <span>\r\n                                    <small>\r\n                                        <span className=\"float-left \">Total Reward/block</span>\r\n                                        <span className=\"float-right \">\r\n                                            <span>\r\n                                                {window.web3Bsc.utils.fromWei(this.props.totalrewardperblock, 'Ether')}&nbsp;PURSE\r\n                                            </span>\r\n                                        </span>\r\n                                    </small>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <br />\r\n                <div className=\"center\" style={{ color: 'white' }}><b><big>Select Your Favourite pool entrees!</big></b></div>\r\n                <div className=\"center\" style={{ color: 'grey' }}><small>&nbsp;! Attention:&nbsp;Be sure to familiar with protocol risks and fees before using the farms!</small></div>\r\n                <br />\r\n\r\n\r\n                {/* ################################################################################################### */}\r\n                {/* <div className=\"rowC center\">\r\n\r\n                    <div className=\"card mb-4\" style={{ maxWidth: '250px' }}>\r\n                        <div className=\"card-body text-center\">\r\n                            <span>\r\n                                <span className=\"text\">\r\n                                    <img src={purse} height='30' alt=\"\" /><br /><br />\r\n                                    <b>PURSE-USDC</b>\r\n                                    <div>\r\n                                        <span className=\" text-muted\"><small>Deposit<small className=\"textSmall\">PURSE-USDC PANCAKE LP</small> to Earn PURSE</small></span><br /><br />\r\n                                        <span className=\" text-muted\"><small>APY:  {(28000 * 365 * this.props.poolInfo[0].pursePerBlock / this.props.lpTokenInContract[0]) * 100} % </small></span><br />\r\n                                        <span className=\" text-muted\"><small>LP Staked: {window.web3.utils.fromWei(this.props.userInfo[0].amount, 'Ether')}</small></span><br />\r\n                                        <span className=\" text-muted\"><small>TVL: </small></span>\r\n                                        <br /><br />\r\n                                        <Button variant=\"outlined\" color=\"default\" component={Link} to=\"/menu/PURSE-USDC\">Select</Button>\r\n                                    </div>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>&nbsp;&nbsp;&nbsp;\r\n\r\n                    <div className=\"card mb-4\" style={{ maxWidth: '250px' }}>\r\n                        <div className=\"card-body text-center\">\r\n                            <span>\r\n                                <span className=\"text\">\r\n                                    <img src={purse} height='30' alt=\"\" /><br /><br />\r\n                                    <b>PURSE-BNB</b>\r\n                                    <div>\r\n                                        <span className=\" text-muted\"><small>Deposit<small className=\"textSmall\">PURSE-BNB PANCAKE LP</small> to Earn PURSE</small></span><br /><br />\r\n                                        <span className=\" text-muted\"><small>APY:  {(28000 * 365 * this.props.poolInfo[1].pursePerBlock / this.props.lpTokenInContract[1]) * 100} % </small></span><br />\r\n                                        <span className=\" text-muted\"><small>LP Staked: {window.web3.utils.fromWei(this.props.userInfo[1].amount, 'Ether')}</small></span><br />\r\n                                        <span className=\" text-muted\"><small>TVL: </small></span>\r\n                                        <br /><br />\r\n                                        <Button variant=\"outlined\" color=\"default\" component={Link} to=\"/menu/PURSE-BNB\">Select</Button>\r\n                                    </div>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n\r\n              \r\n                {/* <div className=\"center\" style={{ color: 'grey' }}><b><big>Dynamic added farm in progress...</big></b></div><br/> */}\r\n\r\n                {this.props.farmLoading ?\r\n                    <div className=\"row floated\" >\r\n                        {this.props.poolSegmentInfo[0].map((poolSegmentInfo, key) => {\r\n                            let i = this.props.poolSegmentInfo[0].indexOf(poolSegmentInfo)\r\n                            return (\r\n                                <div key={key}>\r\n                                    <div className=\"col\">\r\n                                        <div className=\"card mb-4 cardbody card-body text-center\" style={{ maxWidth: '230px', color: 'silver' }}>\r\n                                            <span>\r\n                                                <img src={purse} height='30' alt=\"\" /><br />\r\n                                                <b className=\"text\">{this.props.lpTokenSegmentAsymbol[0][i]}-{this.props.lpTokenSegmentBsymbol[0][i]}</b>\r\n                                                <div>\r\n                                                    <span className=\" \"><small>Deposit<small className=\"textSmall\">{this.props.lpTokenSegmentAsymbol[0][i]}-{this.props.lpTokenSegmentBsymbol[0][i]} PANCAKE LP</small> to Earn PURSE</small></span><br /><br />\r\n                                                    <span className=\" \" ><small>APR:  {parseInt(this.props.apr[0][i])} % </small></span><br />\r\n                                                    <span className=\"center rowC\"><small>Bonus Multiplier: {this.props.bonusMultiplier[0][i]}x &nbsp;&nbsp;\r\n                                                        <Popup\r\n                                                            trigger={open => (\r\n                                                                <span><BsFillQuestionCircleFill size={13} /></span>\r\n                                                            )}\r\n                                                            on=\"hover\"\r\n                                                            position=\"right center\"\r\n                                                            offsetY={-50}\r\n                                                            offsetX={5}\r\n                                                        >\r\n                                                            <span className=\"textInfo\">The Multiplier represents the proportion of PURSE rewards each farm receives, as a proportion of the PURSE produced each block.<br /></span>\r\n                                                            <span className=\"textInfo\">For example, if a 1x farm received 1 PURSE per block, a 40x farm would receive 40 PURSE per block.<br /></span>\r\n                                                            <span className=\"textInfo\">This amount is already included in all APR calculations for the farm. </span></Popup>&nbsp;</small></span>\r\n                                                    <span className=\" \"><small>LP Staked: {this.props.userSegmentInfo[0][i]}</small></span><br />\r\n                                                    <span className=\" \"><small>Purse Earned: {this.props.pendingSegmentReward[0][i]}</small></span><br />\r\n                                                    <span className=\" \"><small>TVL: $ {this.props.tvl[0][i]}</small></span>\r\n                                                    <br />\r\n                                                    {/* <Button variant=\"outlined\" color=\"default\" component={Link} onClick={(event) => { this.props.setI(0, i) }} to=\"/deposit\">Select</Button> */}\r\n                                                    <Buttons variant=\"outline-info\" size=\"sm\" style={{ minWidth: '80px', marginTop: '10px' }} className=\"mb-2\" onClick={() => {\r\n                                                        this.props.setTrigger(true)\r\n                                                        this.props.setI(0, i)\r\n                                                    }}>Select</Buttons>\r\n                                                    <div >\r\n                                                        <Buttons\r\n                                                            variant=\"outline-success\"\r\n                                                            type=\"submit\"\r\n                                                            size=\"sm\"\r\n                                                            style={{ minWidth: '80px' }}\r\n                                                            onClick={(event) => {\r\n                                                                event.preventDefault()\r\n                                                                this.props.harvest(i, \"0\")\r\n                                                            }}>\r\n                                                            Harvest\r\n                                                        </Buttons>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    :\r\n                    <div className=\"center\">\r\n                        <div className=\"bounceball\"></div> &nbsp;\r\n                        <div className=\"textLoadingSmall\">NETWORK IS Loading...</div>\r\n                    </div>\r\n                }\r\n\r\n\r\n\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport purse from '../purse.png'\r\nimport purse2 from '../purse-.png'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Button from '@material-ui/core/Button';\r\nimport Buttons from 'react-bootstrap/Button'\r\nimport bigInt from 'big-integer'\r\nimport './App.css';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport { BsFillQuestionCircleFill } from 'react-icons/bs';\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isShown: false\r\n        }\r\n        this.changeBackgroundColor = this.changeBackgroundColor.bind(this)\r\n    }\r\n\r\n    changeBackgroundColor() {\r\n        console.log(\"clicked\")\r\n        this.setState({\r\n            isShown: true\r\n        })\r\n        console.log(this.state.isShown)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"content\" className=\"mt-3\">\r\n                <div className=\"text-center\">\r\n                    <ButtonGroup>\r\n                        <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"/menu/\" >pancakeswap</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/oneinch/\" >1inch</Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n                <br /><br />\r\n                <div className=\"center img\">\r\n                    <img src={purse2} height='90' alt=\"\" />\r\n                </div><br />\r\n                <h1 className=\"textWhite center\"><b>LP Restaking Farm</b></h1>\r\n                <div className=\"center\" style={{ color: 'silver' }}>&nbsp;Stake <b>&nbsp;1INCH LP Tokens&nbsp;</b> to earn PURSE!!!</div>\r\n                <br />\r\n\r\n                <div className=\"rowC center\">\r\n                    <div className=\"card mb-4 cardbody\" style={{ minWidth: '350px', color: 'silver' }} >\r\n                        <div className=\"card-body\">\r\n                            <span>\r\n                                <span className=\"float-left\">\r\n                                    Your PURSE Balance<br /><b>{window.web3Bsc.utils.fromWei(this.props.purseTokenUpgradableBalance, 'Ether')}</b>\r\n                                    <div>\r\n                                    </div>\r\n                                </span><br /><br /><br />\r\n                            </span>\r\n                            <span>\r\n                                <small>\r\n                                    <span className=\"float-left\">Total Pending harvest</span>\r\n                                    <span className=\"float-right\">\r\n                                        <span>\r\n                                            {window.web3Bsc.utils.fromWei(this.props.totalpendingReward, 'Ether')}&nbsp;PURSE\r\n                                        </span>\r\n                                    </span>\r\n                                </small>\r\n                            </span>\r\n                        </div>\r\n                    </div> &nbsp;&nbsp;&nbsp;\r\n\r\n                    <div className=\"card mb-4 cardbody\" >\r\n                        <div className=\"card-body \" style={{ minWidth: '350px', color: 'silver' }}>\r\n                            <span>\r\n                                <span className=\"float-left\">\r\n                                    Total PURSE Supply<br /><b>{window.web3Bsc.utils.fromWei(this.props.purseTokenTotalSupply, 'Ether')}</b>\r\n                                    <div>\r\n                                    </div>\r\n                                </span><br /><br /><br />\r\n                                <span>\r\n                                    <small>\r\n                                        <span className=\"float-left \">Total Reward/block</span>\r\n                                        <span className=\"float-right \">\r\n                                            <span>\r\n                                                {window.web3Bsc.utils.fromWei(this.props.totalrewardperblock, 'Ether')}&nbsp;PURSE\r\n                                            </span>\r\n                                        </span>\r\n                                    </small>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <br />\r\n                <div className=\"center\" style={{ color: 'white' }}><b><big>Select Your Favourite pool entrees!</big></b></div>\r\n                <div className=\"center\" style={{ color: 'grey' }}><small>&nbsp;! Attention:&nbsp;Be sure to familiar with protocol risks and fees before using the farms!</small></div>\r\n                <br />\r\n\r\n\r\n                {/* ################################################################################################### */}\r\n                {/* <div className=\"rowC center\">\r\n\r\n                    <div className=\"card mb-4\" style={{ maxWidth: '250px' }}>\r\n                        <div className=\"card-body text-center\">\r\n                            <span>\r\n                                <span className=\"text\">\r\n                                    <img src={purse} height='30' alt=\"\" /><br /><br />\r\n                                    <b>PURSE-USDC</b>\r\n                                    <div>\r\n                                        <span className=\" text-muted\"><small>Deposit<small className=\"textSmall\">PURSE-USDC PANCAKE LP</small> to Earn PURSE</small></span><br /><br />\r\n                                        <span className=\" text-muted\"><small>APY:  {(28000 * 365 * this.props.poolInfo[1].pursePerBlock / this.props.lpTokenInContract[1]) * 100} % </small></span><br />\r\n                                        <span className=\" text-muted\"><small>LP Staked: {window.web3.utils.fromWei(this.props.userInfo[1].amount, 'Ether')}</small></span><br />\r\n                                        <span className=\" text-muted\"><small>TVL: </small></span>\r\n                                        <br /><br />\r\n                                        <Button variant=\"outlined\" color=\"default\" component={Link} to=\"/menu/PURSE-USDC\">Select</Button>\r\n                                    </div>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>&nbsp;&nbsp;&nbsp;\r\n\r\n                    <div className=\"card mb-4\" style={{ maxWidth: '250px' }}>\r\n                        <div className=\"card-body text-center\">\r\n                            <span>\r\n                                <span className=\"text\">\r\n                                    <img src={purse} height='30' alt=\"\" /><br /><br />\r\n                                    <b>PURSE-BNB</b>\r\n                                    <div>\r\n                                        <span className=\" text-muted\"><small>Deposit<small className=\"textSmall\">PURSE-BNB PANCAKE LP</small> to Earn PURSE</small></span><br /><br />\r\n                                        <span className=\" text-muted\"><small>APY:  {(28000 * 365 * this.props.poolInfo[1].pursePerBlock / this.props.lpTokenInContract[1]) * 100} % </small></span><br />\r\n                                        <span className=\" text-muted\"><small>LP Staked: {window.web3.utils.fromWei(this.props.userInfo[1].amount, 'Ether')}</small></span><br />\r\n                                        <span className=\" text-muted\"><small>TVL: </small></span>\r\n                                        <br /><br />\r\n                                        <Button variant=\"outlined\" color=\"default\" component={Link} to=\"/menu/PURSE-BNB\">Select</Button>\r\n                                    </div>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n\r\n              \r\n                {/* <div className=\"center\" style={{ color: 'grey' }}><b><big>Dynamic added farm in progress...</big></b></div><br/> */}\r\n\r\n                {this.props.farmLoading ?\r\n                    <div className=\"row floated\" >\r\n                        {this.props.poolSegmentInfo[1].map((poolSegmentInfo, key) => {\r\n                            let i = this.props.poolSegmentInfo[1].indexOf(poolSegmentInfo)\r\n                            return (\r\n                                <div key={key}>\r\n                                    <div className=\"col\">\r\n                                        <div className=\"card mb-4 cardbody card-body text-center\" style={{ maxWidth: '230px', color: 'silver' }}>\r\n                                            <span>\r\n                                                <img src={purse} height='30' alt=\"\" /><br />\r\n                                                <b className=\"text\">{this.props.lpTokenSegmentAsymbol[1][i]}-{this.props.lpTokenSegmentBsymbol[1][i]}</b>\r\n                                                <div>\r\n                                                    <span className=\" \"><small>Deposit<small className=\"textSmall\">{this.props.lpTokenSegmentAsymbol[1][i]}-{this.props.lpTokenSegmentBsymbol[1][i]} 1INCH LP</small> to Earn PURSE</small></span><br /><br />\r\n                                                    <span className=\" \" ><small>APR:  {parseInt(this.props.apr[1][i])} % </small></span><br />\r\n                                                    <span className=\"center rowC\"><small>Bonus Multiplier: {this.props.bonusMultiplier[1][i]}x &nbsp;&nbsp;\r\n                                                        <Popup\r\n                                                            trigger={open => (\r\n                                                                <span><BsFillQuestionCircleFill size={13} /></span>\r\n                                                            )}\r\n                                                            on=\"hover\"\r\n                                                            position=\"right center\"\r\n                                                            offsetY={-50}\r\n                                                            offsetX={5}\r\n                                                        >\r\n                                                            <span className=\"textInfo\">The Multiplier represents the proportion of PURSE rewards each farm receives, as a proportion of the PURSE produced each block.<br /></span>\r\n                                                            <span className=\"textInfo\">For example, if a 1x farm received 1 PURSE per block, a 40x farm would receive 40 PURSE per block.<br /></span>\r\n                                                            <span className=\"textInfo\">This amount is already included in all APR calculations for the farm. </span></Popup>&nbsp;</small></span>\r\n                                                    <span className=\" \"><small>LP Staked: {this.props.userSegmentInfo[1][i]}</small></span><br />\r\n                                                    <span className=\" \"><small>Purse Earned: {this.props.pendingSegmentReward[1][i]}</small></span><br />\r\n                                                    <span className=\" \"><small>TVL: $ {this.props.tvl[1][i]}</small></span>\r\n                                                    <br />\r\n                                                    {/* <Button variant=\"outlined\" color=\"default\" component={Link} onClick={(event) => { this.props.setI(0, i) }} to=\"/deposit\">Select</Button> */}\r\n                                                    <Buttons variant=\"outline-info\" size=\"sm\" style={{ minWidth: '80px', marginTop: '10px' }} className=\"mb-2\" onClick={() => {\r\n                                                        this.props.setTrigger(true)\r\n                                                        this.props.setI(1, i)\r\n                                                    }}>Select</Buttons>\r\n                                                    <div >\r\n                                                        <Buttons\r\n                                                            variant=\"outline-success\"\r\n                                                            type=\"submit\"\r\n                                                            size=\"sm\"\r\n                                                            style={{ minWidth: '80px' }}\r\n                                                            onClick={(event) => {\r\n                                                                event.preventDefault()\r\n                                                                this.props.harvest(i, \"1\")\r\n                                                            }}>\r\n                                                            Harvest\r\n                                                        </Buttons>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    :\r\n                    <div className=\"center\">\r\n                        <div className=\"bounceball\"></div> &nbsp;\r\n                        <div className=\"textLoadingSmall\">NETWORK IS Loading...</div>\r\n                    </div>\r\n                }\r\n\r\n\r\n\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react'\r\n// import { Link } from 'react-router-dom';\r\n// import dai from '../uniswap-uni-logo.png'\r\nimport asterisk from '../asterisk.png'\r\nimport purse from '../purse.png'\r\nimport pancake from '../pancakeswap.png'\r\nimport bigInt from 'big-integer'\r\nimport './App.css';\r\n\r\nclass Deposit extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      message: ''\r\n    }\r\n    this.state = {\r\n      txValidAmount: false\r\n    }\r\n    this.state = {\r\n      txDeposit: false\r\n    }\r\n    this.state = {\r\n      txWithdraw: false\r\n    }\r\n    this.clickHandlerDeposit = this.clickHandlerDeposit.bind(this)\r\n    this.clickHandlerWithdraw = this.clickHandlerWithdraw.bind(this)\r\n  }\r\n\r\n  changeHandler(event) {\r\n    let result = !isNaN(+event); // true if its a number, false if not\r\n\r\n    if (event == \"\") {\r\n      this.setState({\r\n        message: ''\r\n      })\r\n      this.setState({\r\n        txValidAmount: false\r\n      })\r\n    } else if (result == false) {\r\n      this.setState({\r\n        message: 'Not a valid number'\r\n      })\r\n      this.setState({\r\n        txValidAmount: false\r\n      })\r\n      // console.log(this.state.txValid)\r\n    } else if (event <= 0) {\r\n      this.setState({\r\n        message: 'Value need to be greater than 0'\r\n      })\r\n      this.setState({\r\n        txValidAmount: false\r\n      })\r\n    } \r\n    // else if (bigInt(window.web3.utils.toWei(event, 'ether')).value > bigInt(this.props.lpTokenSegmentBalance[this.props.n][this.props.i]).value) {\r\n    //   this.setState({\r\n    //     message: 'Not enough Balance'\r\n    //   })\r\n    //   this.setState({\r\n    //     txValidAmount: false\r\n    //   })\r\n    // }\r\n    else {\r\n      this.setState({\r\n        message: ''\r\n      })\r\n      this.setState({\r\n        txValidAmount: true\r\n      })\r\n    }\r\n  }\r\n\r\n  clickHandlerDeposit() {\r\n    // console.log(\"clicked\")\r\n    this.setState({\r\n      txDeposit: true,\r\n      txWithdraw: false\r\n    })\r\n  }\r\n\r\n  clickHandlerWithdraw() {\r\n    // console.log(\"clicked\")\r\n    this.setState({\r\n      txDeposit: false,\r\n      txWithdraw: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"content\" className=\"mt-3\">\r\n        <div className=\"text-center\">\r\n          {/* <ButtonGroup>\r\n            <Button variant=\"contained\" color=\"default\" >pancakeswap</Button>\r\n            <Button variant=\"outlined\" color=\"default\" >1inch</Button>\r\n          </ButtonGroup> */}\r\n        </div>\r\n        <br /><br />\r\n\r\n        <h2 className=\"center textWhite\"><b>{this.props.lpTokenSegmentAsymbol[this.props.n][this.props.i]}-{this.props.lpTokenSegmentBsymbol[this.props.n][this.props.i]} Farm</b></h2>\r\n        <br />\r\n        <div className=\"center\" style={{ color: 'silver' }}>&nbsp;Deposit <b>&nbsp;{this.props.lpTokenSegmentAsymbol[this.props.n][this.props.i]}-{this.props.lpTokenSegmentBsymbol[this.props.n][this.props.i]} LP Token&nbsp;</b> and earn PURSE!!!</div>\r\n        {/* <div className=\"center\" style={{ color: 'silver' }}>&nbsp;APY :  {(28000 * 365 * this.props.poolSegmentInfo[this.props.n][this.props.i].pursePerBlock / this.props.lpTokenSegmentInContract[this.props.n][this.props.i]) * 100} %</div> */}\r\n        <br />\r\n\r\n        <div className=\"card mb-4 cardbody\" >\r\n          <div className=\"card-body\">\r\n\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-success btn-sm float-right\"\r\n              style={{ maxWidth: '70px' }}\r\n              onClick={(event) => {\r\n                event.preventDefault()\r\n                if (this.props.pendingSegmentReward[this.props.n][this.props.i] <= 0) {\r\n                  alert(\"No token to harvest! Please deposit PURSE-USDC PANCAKE LP to earn PURSE\")\r\n                } else {\r\n                  console.log(\"...\")\r\n                  console.log(this.props.pendingSegmentReward[this.props.n][this.props.i])\r\n                  this.props.harvest(this.props.i, this.props.n)\r\n                }\r\n              }}>\r\n              <small>Harvest</small>\r\n\r\n            </button>\r\n\r\n            <table className=\"table table-borderless text-center\" style={{ color: 'silver' }}>\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">{this.props.lpTokenSegmentAsymbol[this.props.n][this.props.i]}-{this.props.lpTokenSegmentBsymbol[this.props.n][this.props.i]} LP Staked</th>\r\n                  <th scope=\"col\">PURSE Earned</th>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"col\"><img src={pancake} height='30' alt=\"\" /></th>\r\n                  <th scope=\"col\"><img src={purse} height='30' alt=\"\" /></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{this.props.userSegmentInfo[this.props.n][this.props.i]}</td>\r\n                  <td>{this.props.pendingSegmentReward[this.props.n][this.props.i]}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n\r\n\r\n            <div className=\"card mb-4 cardbody\" >\r\n              <div className=\"card-body\">\r\n                {this.props.wallet || this.props.walletConnect?\r\n\r\n                  <form className=\"mb-3\" onSubmit={(event) => {\r\n                    event.preventDefault()\r\n                    if (this.state.txValidAmount === false) {\r\n                      alert(\"Invalid input! PLease check your input again\")\r\n                    } else {\r\n                      let amount\r\n                      amount = this.input.value.toString()\r\n                      amount = window.web3Bsc.utils.toWei(amount, 'Ether')\r\n                      console.log(this.state.txDeposit)\r\n                      console.log(this.state.txWithdraw)\r\n                      if (this.state.txDeposit === true && this.state.txWithdraw === false) {\r\n                        if (bigInt(amount).value > bigInt(this.props.lpTokenSegmentBalance[this.props.n][this.props.i]).value) {\r\n                          alert(\"Not enough funds\")                          \r\n                        } else {\r\n                          this.props.deposit(this.props.i, amount, this.props.n)\r\n                        }\r\n                      } else if (this.state.txDeposit === false && this.state.txWithdraw === true) {\r\n                        if ((this.input.value) > this.props.userSegmentInfo[this.props.n][this.props.i]) {\r\n                          console.log((this.input.value))\r\n                          console.log(this.props.userSegmentInfo[this.props.n][this.props.i])\r\n                          alert(\"Withdraw tokens more than deposit LP tokens\")   \r\n                        } else {\r\n                          console.log((this.input.value))\r\n                          console.log(this.props.userSegmentInfo[this.props.n][this.props.i])\r\n                          this.props.withdraw(this.props.i, amount, this.props.n)\r\n                        }\r\n                      }\r\n                    }\r\n                  }}>\r\n                    <div>\r\n                      <label className=\"float-left\"><b>Deposit</b></label>\r\n                      <span className=\"float-right\"  style={{ color: 'silver' }}>\r\n                        <span>\r\n                          LP Balance &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: {window.web3Bsc.utils.fromWei(this.props.lpTokenSegmentBalance[this.props.n][this.props.i].toString(), 'Ether')}</span>\r\n                        <span><br />\r\n                          PURSE Balance&nbsp;: {window.web3Bsc.utils.fromWei(this.props.purseTokenUpgradableBalance, 'Ether')}\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <br/><br/><br/>\r\n\r\n                    {this.props.lpTokenSegmentAllowance[this.props.n][this.props.i] > 100000000000000000000000000000 ?\r\n                      <div>\r\n                        <div className=\"input-group mb-4\" >\r\n                          <input\r\n                            type=\"text\"\r\n                            ref={(input) => { this.input = input }}\r\n                            className=\"form-control form-control-lg cardbody\"\r\n                            placeholder=\"0\"\r\n                            onChange={(e) => {\r\n                              const value = e.target.value;\r\n                              // console.log(value)\r\n                              this.changeHandler(value)\r\n                            }}\r\n                            required />\r\n                          <div className=\"input-group-append\">\r\n                            <div className=\"input-group-text cardbody\" style={{ color: 'silver' }}>\r\n                              <img src={pancake} height='25' alt=\"\" />\r\n                              &nbsp;&nbsp;&nbsp; LP\r\n                            </div>\r\n                          </div>\r\n                        </div >\r\n                        <div style={{ color: 'red' }}>{this.state.message} </div>\r\n\r\n                        <div className=\"rowC center\">\r\n                          <button type=\"submit\" className=\"btn btn-primary btn-lg\" onClick={(event) => {\r\n                            console.log(\"clicked deposit...\")\r\n                            this.clickHandlerDeposit()\r\n                          }}> Deposit </button>&nbsp;&nbsp;&nbsp;\r\n                          <button type=\"submit\" className=\"btn btn-primary btn-lg\" onClick={(event) => {\r\n                            console.log(\"clicked withdraw...\")\r\n                            this.clickHandlerWithdraw()\r\n                          }}>Withdraw</button>&nbsp;&nbsp;&nbsp;\r\n                        </div>\r\n                      </div>\r\n                      :\r\n                      <div className=\"rowC center\">                                             \r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\" onClick={(event) => {\r\n                          this.props.approve(this.props.i, this.props.n)\r\n                        }}>Approve</button>\r\n                      </div>\r\n                    }\r\n                  </form>\r\n\r\n\r\n\r\n\r\n                  :\r\n                  <div className=\"rowC center\">\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-lg\" onClick={async () => {\r\n                      console.log(\"clicked withdraw...\")\r\n                      await this.props.connectWallet()\r\n                    }}>Connect Wallet</button>\r\n                  </div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"text-center\" style={{ color: 'grey' }}><img src={asterisk} height='15' />&nbsp;<small>Every time you stake and unstake LP tokens, the contract will automatically harvest PURSE rewards for you!</small></div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Deposit;\r\n","import React, { Component } from 'react'\r\nimport './Popup.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseButton from 'react-bootstrap/CloseButton'\r\n\r\nclass Popup extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.trigger ?\r\n                    <div className=\"popup\">\r\n                        <div className=\"popup-inner ml-auto mr-auto\" >\r\n                                <CloseButton className=\"close\" onClick={() => {\r\n                                    this.props.setTrigger(false)\r\n                                }}>close\r\n                                </CloseButton>\r\n                                {this.props.children}\r\n                        </div>\r\n                    </div>\r\n                    : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Popup;","import React, { Component } from 'react'\r\nimport Web3 from 'web3'\r\n// import Web3Modal from \"web3modal\";\r\n// import WalletConnect from \"@walletconnect/client\";\r\n// import QRCodeModal from \"@walletconnect/qrcode-modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport LpToken from '../abis/LpToken.json'\r\nimport IPancakePair from '../abis/IPancakePair.json'\r\nimport PurseTokenUpgradable from '../abis/PurseTokenUpgradable.json'\r\nimport RestakingFarm from '../abis/RestakingFarm.json'\r\n\r\nimport Navb from './Navbar'\r\nimport Main from './Main'\r\nimport Menu from './Menu'\r\nimport Oneinch from './1inch'\r\nimport Deposit from './Deposit'\r\nimport Popup from './Popup'\r\nimport './Popup.css'\r\nimport './App.css'\r\n// import { FaWindowClose } from 'react-icons/fa';\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n    while (this.state.loading == true) {\r\n      await this.loadBlockchainData()\r\n      // console.log(\"repeatfalse\")\r\n      await this.delay(1000);\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n\r\n    const web3Bsc = window.web3Bsc\r\n    // window.web3 = new Web3(window.ethereum)\r\n\r\n    // const chainId = await web3.eth.net.getId()\r\n\r\n    const networkId = \"97\"\r\n    let accounts = []\r\n    if (this.state.metamask == true) {\r\n      const web3 = window.web3\r\n      accounts = await web3.eth.getAccounts()\r\n      // this.setState({ account: accounts[0] })\r\n      const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n\r\n      this.setState({ networkId })\r\n      this.setState({ chainId })\r\n\r\n      if (this.state.chainId == \"0x61\") {\r\n        this.setState({ networkName: \"BSC Testnet\" })\r\n      } else if (this.state.chainId == \"0x38\") {\r\n        this.setState({ networkName: \"BSC\" })\r\n      } else if (this.state.chainId == \"0x1\") {\r\n        this.setState({ networkName: \"Ethereum\" })\r\n      } else if (this.state.chainId == \"0x3\") {\r\n        this.setState({ networkName: \"Ropsten\" })\r\n      } else if (this.state.chainId == \"0x4\") {\r\n        this.setState({ networkName: \"Rinkeby\" })\r\n      } else if (this.state.chainId == \"0x2a\") {\r\n        this.setState({ networkName: \"Kovan\" })\r\n      } else if (this.state.chainId == \"0x89\") {\r\n        this.setState({ networkName: \"Polygon\" })\r\n      } else if (this.state.chainId == \"0x13881\") {\r\n        this.setState({ networkName: \"Mumbai\" })\r\n      } else if (this.state.chainId == \"0xa869\") {\r\n        this.setState({ networkName: \"Fuji\" })\r\n      } else if (this.state.chainId == \"0xa86a\") {\r\n        this.setState({ networkName: \"Avalanche\" })\r\n      }\r\n\r\n      // this.handleChainChanged(\"0x61\");\r\n\r\n      window.ethereum.on('chainChanged', this.handleChainChanged);\r\n      window.ethereum.on('accountsChanged', this.handleAccountsChanged);\r\n    }\r\n\r\n\r\n    if (this.state.wallet == false && this.state.walletConnect == false) {\r\n      // Load PurseTokenUpgradable\r\n      const purseTokenUpgradableData = PurseTokenUpgradable.networks[networkId]\r\n      const restakingFarmData = RestakingFarm.networks[networkId]\r\n      if (purseTokenUpgradableData) {\r\n        const purseTokenUpgradable = new web3Bsc.eth.Contract(PurseTokenUpgradable.abi, purseTokenUpgradableData.address)\r\n        this.setState({ purseTokenUpgradable })\r\n        let purseTokenUpgradableBalance = 0\r\n        this.setState({ purseTokenUpgradableBalance: purseTokenUpgradableBalance.toString() })\r\n        let purseTokenTotalSupply = await purseTokenUpgradable.methods.totalSupply().call()\r\n        this.setState({ purseTokenTotalSupply: purseTokenTotalSupply.toString() })\r\n        let poolRewardToken = await purseTokenUpgradable.methods.balanceOf(restakingFarmData.address).call()\r\n        this.setState({ poolRewardToken })\r\n      }\r\n      //////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n      if (restakingFarmData) {\r\n        const restakingFarm = new web3Bsc.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n        this.setState({ restakingFarm })\r\n        let poolCapRewardToken = await restakingFarm.methods.capMintToken().call()\r\n        let poolMintedRewardToken = await restakingFarm.methods.totalMintToken().call()\r\n        let poolLength = await restakingFarm.methods.poolLength().call()\r\n        this.setState({ poolCapRewardToken })\r\n        this.setState({ poolMintedRewardToken })\r\n        this.setState({ poolLength })\r\n        let totalrewardperblock = 0\r\n        let totalpendingReward = 0\r\n\r\n        let userSegmentInfo = [[], []]\r\n        let poolSegmentInfo = [[], []]\r\n        let lpTokenSegmentInContract = [[], []]\r\n        let lpTokenSegmentBalance = [[], []]\r\n        let lpTokenSegmentAsymbol = [[], []]\r\n        let lpTokenSegmentBsymbol = [[], []]\r\n        let pendingSegmentReward = [[], []]\r\n        let lpTokenValue = [[], []]\r\n        let bonusMultiplier = [[], []]\r\n        let tvl = [[], []]\r\n        let apr = [[], []]\r\n        let n = 0\r\n        let i = 0\r\n        for (i = 0; i < poolLength; i++) {\r\n\r\n          let lpTokenAddress = await restakingFarm.methods.poolTokenList(i).call()\r\n          let poolInfo = await restakingFarm.methods.poolInfo(lpTokenAddress).call()\r\n          let lpTokenPair = new web3Bsc.eth.Contract(IPancakePair.abi, lpTokenAddress)\r\n          let lpTokenPairA = await lpTokenPair.methods.token0().call()\r\n          let lpTokenPairB = await lpTokenPair.methods.token1().call()\r\n          let lpTokenA = new web3Bsc.eth.Contract(LpToken.abi, lpTokenPairA)\r\n          let lpTokenB = new web3Bsc.eth.Contract(LpToken.abi, lpTokenPairB)\r\n          let lpTokenInContract = await lpTokenPair.methods.balanceOf(restakingFarmData.address).call()\r\n          lpTokenInContract = web3Bsc.utils.fromWei(lpTokenInContract, \"ether\")\r\n          let lpTokenBalance = 0\r\n          let lpTokenTSupply = await lpTokenPair.methods.totalSupply().call()\r\n          let lpTokenPairsymbol = await lpTokenPair.methods.symbol().call()\r\n          let lpTokenAsymbol = await lpTokenA.methods.symbol().call()\r\n          let lpTokenBsymbol = await lpTokenB.methods.symbol().call()\r\n          let lpTokenABalanceContract = await lpTokenA.methods.balanceOf(lpTokenAddress).call()\r\n          let lpTokenBBalanceContract = await lpTokenB.methods.balanceOf(lpTokenAddress).call()\r\n          let pendingReward = 0\r\n\r\n          let tokenAPrice = 0\r\n          let tokenBPrice = 0\r\n          if (lpTokenAsymbol == \"PURSE\") {\r\n            tokenAPrice = this.state.PURSEPrice\r\n          } else if (lpTokenAsymbol == \"mBNB\") {\r\n            tokenAPrice = this.state.BNBPrice\r\n          } else if (lpTokenAsymbol == \"mBTC\") {\r\n            tokenAPrice = this.state.Price\r\n          } else if (lpTokenAsymbol == \"mWETH\") {\r\n            tokenAPrice = this.state.WETHPrice\r\n          } else if (lpTokenAsymbol == \"mUSDC\") {\r\n            tokenAPrice = this.state.USDCPrice\r\n          } else if (lpTokenAsymbol == \"mBTC\") {\r\n            tokenAPrice = this.state.BTCPrice\r\n          }\r\n\r\n          if (lpTokenBsymbol == \"PURSE\") {\r\n            tokenBPrice = this.state.PURSEPrice\r\n          } else if (lpTokenBsymbol == \"mBNB\") {\r\n            tokenBPrice = this.state.BNBPrice\r\n          } else if (lpTokenBsymbol == \"mBTC\") {\r\n            tokenBPrice = this.state.Price\r\n          } else if (lpTokenBsymbol == \"mWETH\") {\r\n            tokenBPrice = this.state.WETHPrice\r\n          } else if (lpTokenBsymbol == \"mUSDC\") {\r\n            tokenBPrice = this.state.USDCPrice\r\n          } else if (lpTokenBsymbol == \"mBTC\") {\r\n            tokenBPrice = this.state.BTCPrice\r\n          }\r\n\r\n          let poolbonusMultiplier = poolInfo.bonusMultiplier\r\n          totalrewardperblock += parseInt(poolInfo.pursePerBlock * poolbonusMultiplier)\r\n          // totalpendingReward += parseInt(pendingReward)\r\n\r\n          if (lpTokenPairsymbol == \"Cake-LP\") {\r\n            userSegmentInfo[0][n] = \"0\"\r\n            poolSegmentInfo[0][n] = poolInfo\r\n            lpTokenSegmentInContract[0][n] = lpTokenInContract\r\n            bonusMultiplier[0][n] = poolbonusMultiplier\r\n            lpTokenSegmentBalance[0][n] = lpTokenBalance\r\n            lpTokenSegmentAsymbol[0][n] = lpTokenAsymbol\r\n            lpTokenSegmentBsymbol[0][n] = lpTokenBsymbol\r\n            pendingSegmentReward[0][n] = pendingReward\r\n            lpTokenValue[0][n] = ((lpTokenABalanceContract * tokenAPrice) + (lpTokenBBalanceContract * tokenBPrice)) / lpTokenTSupply\r\n            tvl[0][n] = lpTokenValue[0][n] * lpTokenInContract\r\n            apr[0][n] = ((28000 * 365 * web3Bsc.utils.fromWei((poolInfo.pursePerBlock * poolbonusMultiplier).toString(), 'Ether') * this.state.PURSEPrice) / tvl[0][n]) * 100\r\n            n += 1\r\n          } else {\r\n            userSegmentInfo[1][n] = \"0\"\r\n            poolSegmentInfo[1][n] = poolInfo\r\n            lpTokenSegmentInContract[1][n] = lpTokenInContract\r\n            bonusMultiplier[1][n] = poolbonusMultiplier\r\n            lpTokenSegmentBalance[1][n] = lpTokenBalance\r\n            lpTokenSegmentAsymbol[1][n] = lpTokenAsymbol\r\n            lpTokenSegmentBsymbol[1][n] = lpTokenBsymbol\r\n            pendingSegmentReward[1][n] = pendingReward\r\n            tvl[1][n] = lpTokenValue[1][n] * lpTokenInContract\r\n            apr[1][n] = ((28000 * 365 * web3Bsc.utils.fromWei((poolInfo.pursePerBlock * poolbonusMultiplier).toString(), 'Ether') * this.state.PURSEPrice) / tvl[1][n]) * 100\r\n            n += 1\r\n          }\r\n\r\n        }\r\n        this.setState({ apr })\r\n        this.setState({ tvl })\r\n        this.setState({ bonusMultiplier })\r\n        this.setState({ userSegmentInfo })\r\n        this.setState({ poolSegmentInfo })\r\n        this.setState({ lpTokenSegmentInContract })\r\n        this.setState({ lpTokenSegmentBalance })\r\n        this.setState({ lpTokenSegmentAsymbol })\r\n        this.setState({ lpTokenSegmentBsymbol })\r\n        this.setState({ pendingSegmentReward })\r\n\r\n        this.setState({ totalrewardperblock: totalrewardperblock.toLocaleString('fullwide', { useGrouping: false }) })\r\n        this.setState({ totalpendingReward: totalpendingReward.toLocaleString('fullwide', { useGrouping: false }) })\r\n      }\r\n      // console.log(\"abcs\")\r\n    }\r\n\r\n    else {\r\n      const first4Account = this.state.account.substring(0, 4)\r\n      const last4Account = this.state.account.slice(-4)\r\n      this.setState({ first4Account: first4Account })\r\n      this.setState({ last4Account: last4Account })\r\n\r\n      // Load PurseTokenUpgradable\r\n      const purseTokenUpgradableData = PurseTokenUpgradable.networks[networkId]\r\n      const restakingFarmData = RestakingFarm.networks[networkId]\r\n      if (purseTokenUpgradableData) {\r\n        const purseTokenUpgradable = new web3Bsc.eth.Contract(PurseTokenUpgradable.abi, purseTokenUpgradableData.address)\r\n        this.setState({ purseTokenUpgradable })\r\n        let purseTokenUpgradableBalance = await purseTokenUpgradable.methods.balanceOf(this.state.account).call()\r\n        this.setState({ purseTokenUpgradableBalance: purseTokenUpgradableBalance.toString() })\r\n        let purseTokenTotalSupply = await purseTokenUpgradable.methods.totalSupply().call()\r\n        this.setState({ purseTokenTotalSupply: purseTokenTotalSupply.toString() })\r\n        let poolRewardToken = await purseTokenUpgradable.methods.balanceOf(restakingFarmData.address).call()\r\n        this.setState({ poolRewardToken })\r\n      }\r\n\r\n      // #########################################################################################################################\r\n      // Load RestakingFarm\r\n\r\n      if (restakingFarmData) {\r\n        const restakingFarm = new web3Bsc.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n        console.log(restakingFarmData.address)\r\n        this.setState({ restakingFarm })\r\n        let poolCapRewardToken = await restakingFarm.methods.capMintToken().call()\r\n        let poolMintedRewardToken = await restakingFarm.methods.totalMintToken().call()\r\n        let poolLength = await restakingFarm.methods.poolLength().call()\r\n        console.log(poolLength)\r\n        this.setState({ poolCapRewardToken })\r\n        this.setState({ poolMintedRewardToken })\r\n        this.setState({ poolLength })\r\n        let totalrewardperblock = 0\r\n        let totalpendingReward = 0\r\n\r\n        let userSegmentInfo = [[], []]\r\n        let poolSegmentInfo = [[], []]\r\n        let lpTokenSegmentInContract = [[], []]\r\n        let lpTokenSegmentBalance = [[], []]\r\n        let lpTokenSegmentAsymbol = [[], []]\r\n        let lpTokenSegmentBsymbol = [[], []]\r\n        let lpTokenSegmentAllowance = [[], []]\r\n        let pendingSegmentReward = [[], []]\r\n        let lpTokenValue = [[], []]\r\n        let tvl = [[], []]\r\n        let apr = [[], []]\r\n        let n = 0\r\n        let i = 0\r\n        for (i = 0; i < poolLength; i++) {\r\n\r\n          let lpTokenAddress = await restakingFarm.methods.poolTokenList(i).call()\r\n          let poolInfo = await restakingFarm.methods.poolInfo(lpTokenAddress).call()\r\n          let userInfo = await restakingFarm.methods.userInfo(lpTokenAddress, this.state.account).call()\r\n          let lpTokenPair = new web3Bsc.eth.Contract(IPancakePair.abi, lpTokenAddress)\r\n          let lpTokenPairA = await lpTokenPair.methods.token0().call()\r\n          let lpTokenPairB = await lpTokenPair.methods.token1().call()\r\n          let lpTokenA = new web3Bsc.eth.Contract(LpToken.abi, lpTokenPairA)\r\n          let lpTokenB = new web3Bsc.eth.Contract(LpToken.abi, lpTokenPairB)\r\n          let lpTokenInContract = await lpTokenPair.methods.balanceOf(restakingFarmData.address).call()\r\n          lpTokenInContract = web3Bsc.utils.fromWei(lpTokenInContract, \"ether\")\r\n          let lpTokenBalance = await lpTokenPair.methods.balanceOf(this.state.account).call()\r\n          let lpTokenTSupply = await lpTokenPair.methods.totalSupply().call()\r\n          let lpTokenPairsymbol = await lpTokenPair.methods.symbol().call()\r\n          let lpTokenAllowance = await lpTokenPair.methods.allowance(this.state.account, restakingFarmData.address).call()\r\n          let lpTokenAsymbol = await lpTokenA.methods.symbol().call()\r\n          let lpTokenBsymbol = await lpTokenB.methods.symbol().call()\r\n          let lpTokenABalanceContract = await lpTokenA.methods.balanceOf(lpTokenAddress).call()\r\n          let lpTokenBBalanceContract = await lpTokenB.methods.balanceOf(lpTokenAddress).call()\r\n          let pendingReward = await restakingFarm.methods.pendingReward(lpTokenAddress, this.state.account).call()\r\n\r\n\r\n          let tokenAPrice = 0\r\n          let tokenBPrice = 0\r\n          if (lpTokenAsymbol == \"PURSE\") {\r\n            tokenAPrice = this.state.PURSEPrice\r\n          } else if (lpTokenAsymbol == \"mBNB\") {\r\n            tokenAPrice = this.state.BNBPrice\r\n          } else if (lpTokenAsymbol == \"mBTC\") {\r\n            tokenAPrice = this.state.Price\r\n          } else if (lpTokenAsymbol == \"mWETH\") {\r\n            tokenAPrice = this.state.WETHPrice\r\n          } else if (lpTokenAsymbol == \"mUSDC\") {\r\n            tokenAPrice = this.state.USDCPrice\r\n          } else if (lpTokenAsymbol == \"mBTC\") {\r\n            tokenAPrice = this.state.BTCPrice\r\n          }\r\n\r\n          if (lpTokenBsymbol == \"PURSE\") {\r\n            tokenBPrice = this.state.PURSEPrice\r\n          } else if (lpTokenBsymbol == \"mBNB\") {\r\n            tokenBPrice = this.state.BNBPrice\r\n          } else if (lpTokenBsymbol == \"mBTC\") {\r\n            tokenBPrice = this.state.Price\r\n          } else if (lpTokenBsymbol == \"mWETH\") {\r\n            tokenBPrice = this.state.WETHPrice\r\n          } else if (lpTokenBsymbol == \"mUSDC\") {\r\n            tokenBPrice = this.state.USDCPrice\r\n          } else if (lpTokenBsymbol == \"mBTC\") {\r\n            tokenBPrice = this.state.BTCPrice\r\n          }\r\n\r\n          let poolbonusMultiplier = poolInfo.bonusMultiplier\r\n          totalrewardperblock += parseInt(poolInfo.pursePerBlock)\r\n          totalpendingReward += parseInt(pendingReward)\r\n\r\n          if (lpTokenPairsymbol == \"Cake-LP\") {\r\n\r\n            userSegmentInfo[0][n] = web3Bsc.utils.fromWei(userInfo.amount, 'Ether')\r\n            poolSegmentInfo[0][n] = poolInfo\r\n            lpTokenSegmentInContract[0][n] = lpTokenInContract\r\n            lpTokenSegmentBalance[0][n] = lpTokenBalance\r\n            lpTokenSegmentAsymbol[0][n] = lpTokenAsymbol\r\n            lpTokenSegmentBsymbol[0][n] = lpTokenBsymbol\r\n            lpTokenSegmentAllowance[0][n] = lpTokenAllowance\r\n            pendingSegmentReward[0][n] = web3Bsc.utils.fromWei(pendingReward, 'Ether')\r\n            lpTokenValue[0][n] = ((lpTokenABalanceContract * tokenAPrice) + (lpTokenBBalanceContract * tokenBPrice)) / lpTokenTSupply\r\n            tvl[0][n] = lpTokenValue[0][n] * lpTokenInContract\r\n            apr[0][n] = ((28000 * 365 * web3Bsc.utils.fromWei((poolInfo.pursePerBlock * poolbonusMultiplier).toString(), 'Ether') * this.state.PURSEPrice) / tvl[0][n]) * 100\r\n            n += 1\r\n          } else {\r\n            userSegmentInfo[1][n] = web3Bsc.utils.fromWei(userInfo.amount, 'Ether')\r\n            poolSegmentInfo[1][n] = poolInfo\r\n            lpTokenSegmentInContract[1][n] = lpTokenInContract\r\n            lpTokenSegmentBalance[1][n] = lpTokenBalance\r\n            lpTokenSegmentAsymbol[1][n] = lpTokenAsymbol\r\n            lpTokenSegmentBsymbol[1][n] = lpTokenBsymbol\r\n            lpTokenSegmentAllowance[1][n] = lpTokenAllowance\r\n            pendingSegmentReward[1][n] = web3Bsc.utils.fromWei(pendingReward, 'Ether')\r\n            lpTokenValue[1][n] = ((lpTokenABalanceContract * tokenAPrice) + (lpTokenBBalanceContract * tokenBPrice)) / lpTokenTSupply\r\n            tvl[1][n] = lpTokenValue[1][n] * lpTokenInContract\r\n            apr[1][n] = ((28000 * 365 * web3Bsc.utils.fromWei((poolInfo.pursePerBlock * poolbonusMultiplier).toString(), 'Ether') * this.state.PURSEPrice) / tvl[1][n]) * 100\r\n            n += 1\r\n          }\r\n        }\r\n        this.setState({ apr })\r\n        this.setState({ tvl })\r\n\r\n        this.setState({ lpTokenSegmentInContract })\r\n        this.setState({ lpTokenSegmentBalance })\r\n        this.setState({ lpTokenSegmentAsymbol })\r\n        this.setState({ lpTokenSegmentBsymbol })\r\n        this.setState({ pendingSegmentReward })\r\n        this.setState({ lpTokenSegmentAllowance })\r\n        this.setState({ userSegmentInfo })\r\n        this.setState({ poolSegmentInfo })\r\n        this.setState({ totalrewardperblock: totalrewardperblock.toLocaleString('fullwide', { useGrouping: false }) })\r\n        this.setState({ totalpendingReward: totalpendingReward.toLocaleString('fullwide', { useGrouping: false }) })\r\n      }\r\n    }\r\n    this.setState({ loading: true })\r\n    this.setState({ farmLoading: true })\r\n  }\r\n\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      window.web3Bsc = new Web3(`https://data-seed-prebsc-1-s3.binance.org:8545/`);\r\n      // await window.ethereum.enable()\r\n      this.setState({ metamask: true })\r\n      // console.log(window.ethereum.isConnected())\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n      window.web3Bsc = new Web3(`https://data-seed-prebsc-1-s3.binance.org:8545/`);\r\n      this.setState({ metamask: true })\r\n    }\r\n    else {\r\n      window.web3Bsc = new Web3(`https://data-seed-prebsc-1-s3.binance.org:8545/`);\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n      this.setState({ metamask: false })\r\n      this.setState({ wallet: false })\r\n    }\r\n    let response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=binancecoin%2Cweth%2Cbinance-usd%2Cusd-coin%2Ctether%2Cbitcoin%2Cpundi-x-purse&vs_currencies=usd`);\r\n    // let purseResponse = await fetch('https://api.pancakeswap.info/api/v2/tokens/0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C')\r\n    // let purseResponse = await fetch('https://api.1inch.exchange/v4.0/56/quote?fromTokenAddress=0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C&toTokenAddress=0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56&amount=1000000000000')\r\n    const myJson = await response.json();\r\n    // const purseJson = await purseResponse.json();\r\n    let PURSEPrice = myJson[\"pundi-x-purse\"][\"usd\"]\r\n    this.setState({ PURSEPrice: PURSEPrice.toFixed(10) })\r\n    let USDTPrice = myJson[\"tether\"][\"usd\"]\r\n    this.setState({ USDTPrice: USDTPrice.toFixed(10) })\r\n    let USDCPrice = myJson[\"usd-coin\"][\"usd\"]\r\n    this.setState({ USDCPrice: USDCPrice.toFixed(10) })\r\n    let BNBPrice = myJson[\"binancecoin\"][\"usd\"]\r\n    this.setState({ BNBPrice: BNBPrice.toFixed(10) })\r\n    let WETHPrice = myJson[\"weth\"][\"usd\"]\r\n    this.setState({ WETHPrice: WETHPrice.toFixed(10) })\r\n    let BUSDPrice = myJson[\"binance-usd\"][\"usd\"]\r\n    this.setState({ BUSDPrice: BUSDPrice.toFixed(10) })\r\n    let BTCPrice = myJson[\"bitcoin\"][\"usd\"]\r\n    this.setState({ BTCPrice: BTCPrice.toFixed(10) })\r\n    this.setState({ loading: true })\r\n  }\r\n\r\n  connectWallet = () => {\r\n    if (this.state.metamask == true) {\r\n      window.ethereum\r\n        .request({ method: 'eth_requestAccounts' })\r\n        .then(async () => {\r\n          await this.switchNetwork()\r\n          const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n          if (chainId == \"0x61\") {\r\n            this.setWalletTrigger(true)\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          if (err.code === 4001) {\r\n            // EIP-1193 userRejectedRequest error\r\n            // If this happens, the user rejected the connection request.\r\n            console.log('Please connect to MetaMask.');\r\n          } else {\r\n            console.error(\"error\");\r\n            console.error(err);\r\n          }\r\n        });\r\n      // this.componentWillMount()\r\n    } else {\r\n      alert(\"No provider was found\")\r\n    }\r\n  }\r\n\r\n\r\n\r\n  WalletConnect = async () => {\r\n    window.provider = new WalletConnectProvider({\r\n      rpc: {\r\n        97: \"https://data-seed-prebsc-2-s3.binance.org:8545/\"\r\n      },\r\n      chainId: 97,\r\n    });\r\n    await window.provider.enable();\r\n    window.web3Con = await new Web3(window.provider);\r\n    const accounts = await window.web3Con.eth.getAccounts();\r\n    this.setState({ account: accounts[0] })\r\n    const first4Account = this.state.account.substring(0, 4)\r\n    const last4Account = this.state.account.slice(-4)\r\n    this.setState({ first4Account: first4Account })\r\n    this.setState({ last4Account: last4Account })\r\n    this.setState({ walletConnect: true })\r\n  }\r\n\r\n\r\n  // WalletConnect2 = () => {\r\n  //   console.log(\"connected\")\r\n  //   // Create a connector\r\n  //   const connector = new WalletConnect({\r\n  //     bridge: \"https://bridge.walletconnect.org\", // Required\r\n  //     qrcodeModal: QRCodeModal,\r\n  //   });\r\n\r\n  //   // Check if connection is already established\r\n  //   if (!connector.connected) {\r\n  //     // create new session\r\n  //     connector.createSession({ chainId: 97 });\r\n  //   }\r\n\r\n  //   // Subscribe to connection events\r\n  //   connector.on(\"connect\", (error, payload) => {\r\n  //     if (error) {\r\n  //       throw error;\r\n  //     }\r\n\r\n  //     // Get provided accounts and chainId\r\n  //     const { accounts, chainId } = payload.params[0];\r\n  //     console.log(accounts)\r\n  //     console.log(chainId)\r\n  //     this.setState({ account: accounts[0] })\r\n  //     const first4Account = this.state.account.substring(0, 4)\r\n  //     const last4Account = this.state.account.slice(-4)\r\n  //     this.setState({ first4Account: first4Account })\r\n  //     this.setState({ last4Account: last4Account })\r\n  //     this.setState({ walletConnect: true })\r\n  //     // window.web3Con = new Web3(window.ethereum)\r\n  //   });\r\n\r\n  //   connector.on(\"session_update\", (error, payload) => {\r\n  //     if (error) {\r\n  //       throw error;\r\n  //     }\r\n\r\n  //     // Get updated accounts and chainId\r\n  //     const { accounts, chainId } = payload.params[0];\r\n  //     console.log(accounts)\r\n  //     console.log(chainId)\r\n  //     this.setState({ account: accounts[0] })\r\n  //     const first4Account = this.state.account.substring(0, 4)\r\n  //     const last4Account = this.state.account.slice(-4)\r\n  //     this.setState({ first4Account: first4Account })\r\n  //     this.setState({ last4Account: last4Account })\r\n  //     this.setState({ walletConnect: true })\r\n  //   });\r\n\r\n  //   connector.on(\"disconnect\", (error, payload) => {\r\n  //     if (error) {\r\n  //       throw error;\r\n  //     }\r\n\r\n  //     // Delete connector\r\n  //   });\r\n  // }\r\n\r\n  WalletDisconnect = async () => {\r\n    console.log(\"disconnected\")\r\n    await window.provider.disconnect()\r\n    this.setState({ walletConnect: false })\r\n  }\r\n\r\n  // WalletDisconnect2 = () => {\r\n  //   console.log(\"disconnected\")\r\n  //   // Create a connector\r\n  //   const connector = new WalletConnect({\r\n  //     bridge: \"https://bridge.walletconnect.org\", // Required\r\n  //     qrcodeModal: QRCodeModal,\r\n  //   });\r\n\r\n  //   // Check if connection is already established\r\n  //   if (connector.connected) {\r\n  //     // create new session\r\n  //     connector.killSession();\r\n  //     this.setState({ walletConnect: false })\r\n  //   };\r\n  // }\r\n\r\n  switchNetwork = async () => {\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: '0x61' }],\r\n      });\r\n    } catch (switchError) {\r\n      // console.log(switchError.code)\r\n      // This error code indicates that the chain has not been added to MetaMask.\r\n      if (switchError.code === 4902) {\r\n        try {\r\n          // console.log(switchError.code)\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{\r\n              chainId: '0x61', rpcUrls: ['https://data-seed-prebsc-1-s3.binance.org:8545'], chainName: 'BSC Testnet',\r\n              nativeCurrency: {\r\n                name: 'BNB',\r\n                symbol: 'BNB', // 2-6 characters long\r\n                decimals: 18\r\n              }, blockExplorerUrls: ['https://testnet.bscscan.com/']\r\n            }],\r\n          });\r\n          const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n          this.setState({ chainId })\r\n          if (this.state.chainId == \"0x61\") {\r\n            this.setState({ networkName: \"BSC Testnet\" })\r\n          } else if (this.state.chainId == \"0x38\") {\r\n            this.setState({ networkName: \"BSC\" })\r\n          } else if (this.state.chainId == \"0x1\") {\r\n            this.setState({ networkName: \"Ethereum\" })\r\n          } else if (this.state.chainId == \"0x3\") {\r\n            this.setState({ networkName: \"Ropsten\" })\r\n          } else if (this.state.chainId == \"0x4\") {\r\n            this.setState({ networkName: \"Rinkeby\" })\r\n          } else if (this.state.chainId == \"0x2a\") {\r\n            this.setState({ networkName: \"Kovan\" })\r\n          } else if (this.state.chainId == \"0x89\") {\r\n            this.setState({ networkName: \"Polygon\" })\r\n          } else if (this.state.chainId == \"0x13881\") {\r\n            this.setState({ networkName: \"Mumbai\" })\r\n          } else if (this.state.chainId == \"0xa869\") {\r\n            this.setState({ networkName: \"Fuji\" })\r\n          } else if (this.state.chainId == \"0xa86a\") {\r\n            this.setState({ networkName: \"Avalanche\" })\r\n          }\r\n        } catch (addError) {\r\n          // handle \"add\" error\r\n        }\r\n      }\r\n      // handle other \"switch\" errors\r\n    }\r\n  }\r\n\r\n\r\n  handleAccountsChanged = (accounts) => {\r\n    if (accounts.length === 0) {\r\n      // MetaMask is locked or the user has not connected any accounts\r\n      // console.log('Please connect to MetaMask.');\r\n      console.log(accounts)\r\n      this.setWalletTrigger(false)\r\n    } else if (accounts[0] !== this.state.account) {\r\n      console.log(accounts)\r\n      this.state.account = accounts[0];\r\n      const first4Account = this.state.account.substring(0, 4)\r\n      const last4Account = this.state.account.slice(-4)\r\n      this.setState({ first4Account: first4Account })\r\n      this.setState({ last4Account: last4Account })\r\n      // Do any other work!\r\n    }\r\n  }\r\n\r\n  handleChainChanged = async (_chainId) => {\r\n    // We recommend reloading the page, unless you must do otherwise\r\n    // window.location.reload();\r\n    if (_chainId != \"0x61\") {\r\n      this.setWalletTrigger(false)\r\n    }\r\n    if (this.state.networkId !== _chainId) {\r\n      this.state.networkId = _chainId\r\n      const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n      this.setState({ chainId })\r\n      if (this.state.chainId == \"0x61\") {\r\n        this.setState({ networkName: \"BSC Testnet\" })\r\n      } else if (this.state.chainId == \"0x38\") {\r\n        this.setState({ networkName: \"BSC\" })\r\n      } else if (this.state.chainId == \"0x1\") {\r\n        this.setState({ networkName: \"Ethereum\" })\r\n      } else if (this.state.chainId == \"0x3\") {\r\n        this.setState({ networkName: \"Ropsten\" })\r\n      } else if (this.state.chainId == \"0x4\") {\r\n        this.setState({ networkName: \"Rinkeby\" })\r\n      } else if (this.state.chainId == \"0x2a\") {\r\n        this.setState({ networkName: \"Kovan\" })\r\n      } else if (this.state.chainId == \"0x89\") {\r\n        this.setState({ networkName: \"Polygon\" })\r\n      } else if (this.state.chainId == \"0x13881\") {\r\n        this.setState({ networkName: \"Mumbai\" })\r\n      } else if (this.state.chainId == \"0xa869\") {\r\n        this.setState({ networkName: \"Fuji\" })\r\n      } else if (this.state.chainId == \"0xa86a\") {\r\n        this.setState({ networkName: \"Avalanche\" })\r\n      }\r\n      this.switchNetwork()\r\n      // Run any other necessary logic...\r\n    }\r\n  }\r\n\r\n  delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n  deposit = async (i, amount, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      this.setState({ loading: false })\r\n      let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      restakingFarm.methods.deposit(lpTokenAddress, amount).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n        this.setState({ loading: true })\r\n        this.componentWillMount()\r\n      })\r\n    } else if (this.state.wallet == true) {\r\n      this.setState({ loading: false })\r\n      let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      restakingFarm.methods.deposit(lpTokenAddress, amount).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n        this.setState({ loading: true })\r\n        this.componentWillMount()\r\n      })\r\n    }\r\n  }\r\n\r\n  approve = async (i, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      this.setState({ loading: false })\r\n      let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n      let lpToken = new window.web3Con.eth.Contract(LpToken.abi, lpTokenAddress)\r\n      console.log(lpToken)\r\n      console.log(this.state.account)\r\n      console.log(this.state.restakingFarm)\r\n      await lpToken.methods.approve(this.state.restakingFarm._address, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: this.state.account })\r\n      this.componentWillMount()\r\n      this.setState({ loading: true })\r\n    } else if (this.state.wallet == true) {\r\n      this.setState({ loading: false })\r\n      let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n      let lpToken = new window.web3.eth.Contract(LpToken.abi, lpTokenAddress)\r\n      console.log(lpToken)\r\n      console.log(this.state.account)\r\n      console.log(this.state.restakingFarm)\r\n      await lpToken.methods.approve(this.state.restakingFarm._address, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: this.state.account })\r\n      this.componentWillMount()\r\n      this.setState({ loading: true })\r\n    }\r\n  }\r\n\r\n  withdraw = async (i, amount, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      this.setState({ loading: false })\r\n      let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      restakingFarm.methods.withdraw(lpTokenAddress, amount).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n        this.setState({ loading: true })\r\n        this.componentWillMount()\r\n      })\r\n    } else if (this.state.wallet == true) {\r\n      this.setState({ loading: false })\r\n      let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      restakingFarm.methods.withdraw(lpTokenAddress, amount).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n        this.setState({ loading: true })\r\n        this.componentWillMount()\r\n      })\r\n    }\r\n  }\r\n\r\n  harvest = async (i, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      this.setState({ loading: false })\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n      if (this.state.walletConnect === false) {\r\n        alert(\"Wallet is not connected\")\r\n      } else {\r\n        if (this.state.pendingSegmentReward[n][i] <= 0) {\r\n          alert(\"No token to harvest! Please deposit PANCAKE LP to earn PURSE\")\r\n        } else {\r\n          this.setState({ loading: true })\r\n          restakingFarm.methods.claimReward(lpTokenAddress).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n            this.setState({ loading: false })\r\n            this.componentWillMount()\r\n          })\r\n        }\r\n      }\r\n      this.setState({ loading: true })\r\n    } else if (this.state.wallet == true) {\r\n      this.setState({ loading: false })\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n      if (this.state.wallet === false) {\r\n        alert(\"Wallet is not connected\")\r\n      } else {\r\n        if (this.state.pendingSegmentReward[n][i] <= 0) {\r\n          alert(\"No token to harvest! Please deposit PANCAKE LP to earn PURSE\")\r\n        } else {\r\n          this.setState({ loading: true })\r\n          restakingFarm.methods.claimReward(lpTokenAddress).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n            this.setState({ loading: false })\r\n            this.componentWillMount()\r\n          })\r\n        }\r\n      }\r\n      this.setState({ loading: true })\r\n    }\r\n  }\r\n\r\n  setI = (type, pair) => {\r\n    this.setState({ n: type })\r\n    this.setState({ i: pair })\r\n  }\r\n\r\n  setTrigger = (state) => {\r\n    this.setState({ buttonPopup: state })\r\n  }\r\n\r\n  setWalletTrigger = async (state) => {\r\n    if (state == false) {\r\n      await this.setState({ wallet: state })\r\n      // console.log(this.state.wallet)\r\n    } else {\r\n      // console.log(\"trigger\")\r\n      const accounts = await window.web3.eth.getAccounts()\r\n      // console.log(accounts)\r\n      this.setState({ account: accounts[0] })\r\n      const first4Account = this.state.account.substring(0, 4)\r\n      const last4Account = this.state.account.slice(-4)\r\n      this.setState({ first4Account: first4Account })\r\n      this.setState({ last4Account: last4Account })\r\n      this.setState({ wallet: state })\r\n      // console.log(this.state.wallet)\r\n    }\r\n  }\r\n\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      lpToken: {},\r\n      purseTokenUpgradable: {},\r\n      restakingFarm: {},\r\n      purseTokenUpgradableBalance: '0',\r\n      purseTokenTotalSupply: '0',\r\n      i: '0',\r\n      n: '0',\r\n      loading: false,\r\n      wallet: false,\r\n      metamask: false,\r\n      farmLoading: false,\r\n      walletConnect: false,\r\n      poolLength: '0',\r\n      userSegmentInfo: [[], []],\r\n      poolSegmentInfo: [[], []],\r\n      lpTokenSegmentInContract: [[], []],\r\n      lpTokenSegmentBalance: [[], []],\r\n      lpTokenSegmentAsymbol: [[], []],\r\n      lpTokenSegmentBsymbol: [[], []],\r\n      pendingSegmentReward: [[], []],\r\n      lpTokenSegmentAllowance: [[], []],\r\n      bonusMultiplier: [[], []],\r\n      tvl: [[], []],\r\n      apr: [[], []],\r\n      totalrewardperblock: '0',\r\n      totalpendingReward: '0',\r\n      buttonPopup: false,\r\n      poolCapRewardToken: '0',\r\n      poolMintedRewardToken: '0',\r\n      poolRewardToken: '0',\r\n      networkName: \"Loading\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let maincontent\r\n    let menucontent\r\n    let depositcontent\r\n    let oneinchcontent\r\n    if (this.state.loading == false) {\r\n      maincontent =\r\n        <div className=\"wrap\">\r\n          <div className=\"loading\">\r\n            <div className=\"bounceball\"></div>\r\n            <div className=\"textLoading\">NETWORK IS LOADING...</div>\r\n          </div>\r\n        </div>\r\n      depositcontent =\r\n        <div className=\"textLoadingSmall\">Loading...</div>\r\n      menucontent =\r\n        <div className=\"wrap\">\r\n          <div className=\"loading\">\r\n            <div className=\"bounceball\"></div>\r\n            <div className=\"textLoading\">NETWORK IS LOADING...</div>\r\n          </div>\r\n        </div>\r\n    } else {\r\n      maincontent = <Main\r\n        lpTokenBalance={this.state.lpTokenBalance}\r\n        purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n        poolLength={this.state.poolLength}\r\n        deposit={this.deposit}\r\n        withdraw={this.withdraw}\r\n        purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n        lpTokenInContract={this.state.lpTokenInContract}\r\n        totalrewardperblock={this.state.totalrewardperblock}\r\n        poolCapRewardToken={this.state.poolCapRewardToken}\r\n        poolMintedRewardToken={this.state.poolMintedRewardToken}\r\n        poolRewardToken={this.state.poolRewardToken}\r\n      />\r\n      menucontent = <Menu\r\n        lpTokenBalance={this.state.lpTokenBalance}\r\n        purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n        deposit={this.deposit}\r\n        withdraw={this.withdraw}\r\n        setI={this.setI}\r\n        purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n        totalpendingReward={this.state.totalpendingReward}\r\n        totalrewardperblock={this.state.totalrewardperblock}\r\n        userSegmentInfo={this.state.userSegmentInfo}\r\n        poolSegmentInfo={this.state.poolSegmentInfo}\r\n        lpTokenSegmentInContract={this.state.lpTokenSegmentInContract}\r\n        lpTokenSegmentBalance={this.state.lpTokenSegmentBalance}\r\n        lpTokenSegmentAsymbol={this.state.lpTokenSegmentAsymbol}\r\n        lpTokenSegmentBsymbol={this.state.lpTokenSegmentBsymbol}\r\n        pendingSegmentReward={this.state.pendingSegmentReward}\r\n        buttonPopup={this.state.buttonPopup}\r\n        setTrigger={this.setTrigger}\r\n        harvest={this.harvest}\r\n        tvl={this.state.tvl}\r\n        apr={this.state.apr}\r\n        bonusMultiplier={this.state.bonusMultiplier}\r\n        farmLoading={this.state.farmLoading}\r\n      />\r\n      depositcontent = <Deposit\r\n        lpTokenBalance={this.state.lpTokenBalance}\r\n        purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n        deposit={this.deposit}\r\n        withdraw={this.withdraw}\r\n        i={this.state.i}\r\n        n={this.state.n}\r\n        userSegmentInfo={this.state.userSegmentInfo}\r\n        poolSegmentInfo={this.state.poolSegmentInfo}\r\n        lpTokenSegmentInContract={this.state.lpTokenSegmentInContract}\r\n        lpTokenSegmentBalance={this.state.lpTokenSegmentBalance}\r\n        lpTokenSegmentAsymbol={this.state.lpTokenSegmentAsymbol}\r\n        lpTokenSegmentBsymbol={this.state.lpTokenSegmentBsymbol}\r\n        pendingSegmentReward={this.state.pendingSegmentReward}\r\n        lpTokenSegmentAllowance={this.state.lpTokenSegmentAllowance}\r\n        wallet={this.state.wallet}\r\n        harvest={this.harvest}\r\n        approve={this.approve}\r\n        connectWallet={this.connectWallet}\r\n        walletConnect={this.state.walletConnect}\r\n      />\r\n      oneinchcontent = <Oneinch\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      setI={this.setI}\r\n      purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n      totalpendingReward={this.state.totalpendingReward}\r\n      totalrewardperblock={this.state.totalrewardperblock}\r\n      userSegmentInfo={this.state.userSegmentInfo}\r\n      poolSegmentInfo={this.state.poolSegmentInfo}\r\n      lpTokenSegmentInContract={this.state.lpTokenSegmentInContract}\r\n      lpTokenSegmentBalance={this.state.lpTokenSegmentBalance}\r\n      lpTokenSegmentAsymbol={this.state.lpTokenSegmentAsymbol}\r\n      lpTokenSegmentBsymbol={this.state.lpTokenSegmentBsymbol}\r\n      pendingSegmentReward={this.state.pendingSegmentReward}\r\n      buttonPopup={this.state.buttonPopup}\r\n      setTrigger={this.setTrigger}\r\n      harvest={this.harvest}\r\n      tvl={this.state.tvl}\r\n      apr={this.state.apr}\r\n      bonusMultiplier={this.state.bonusMultiplier}\r\n      farmLoading={this.state.farmLoading}\r\n      />\r\n    }\r\n\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Navb\r\n            account={this.state.account}\r\n            first4Account={this.state.first4Account}\r\n            last4Account={this.state.last4Account}\r\n            wallet={this.state.wallet}\r\n            setWalletTrigger={this.setWalletTrigger}\r\n            loadWeb3={this.loadWeb3}\r\n            connectWallet={this.connectWallet}\r\n            WalletConnect={this.WalletConnect}\r\n            walletConnect={this.state.walletConnect}\r\n            WalletDisconnect={this.WalletDisconnect}\r\n            networkName={this.state.networkName}\r\n            PURSEPrice={this.state.PURSEPrice}\r\n          />\r\n\r\n          <div className=\"container-fluid mt-5\">\r\n            <div className=\"row\">\r\n              <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '800px' }}>\r\n                <div className=\"content mr-auto ml-auto\">\r\n                  <Switch>\r\n                    <Route path=\"/\" exact > {maincontent} </Route>\r\n                    <Route path=\"/home\" exact > {maincontent} </Route>\r\n                    <Route path=\"/menu\" exact > {menucontent} </Route>\r\n                    <Route path=\"/deposit\" exact > {depositcontent} </Route>\r\n                    <Route path=\"/oneinch/\" exact > {oneinchcontent} </Route>\r\n                  </Switch>\r\n                  <Popup trigger={this.state.buttonPopup} setTrigger={this.setTrigger}>\r\n                    <div className=\"container-fluid mt-5\">{depositcontent}</div>\r\n                  </Popup>\r\n                </div>\r\n              </main>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}