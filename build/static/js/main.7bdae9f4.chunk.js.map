{"version":3,"sources":["purse-.png","asterisk.png","pancakeswap.png","metamask-fox.svg","walletconnect-logo.svg","purse.png","components/NavMenu.js","components/Navbar.js","components/Main.js","components/Menu.js","components/1inch.js","components/Deposit.js","components/Popup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","styled","nav","_templateObject","NavLink","Link","_templateObject2","NavLink0","_templateObject3","NavLinkHome","_templateObject4","NavLink2","_templateObject5","Navb","FaBars","_templateObject6","div","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_this","this","react_default","a","createElement","className","to","onClick","window","open","src","purse","width","height","alt","props","PURSEPrice","Button","variant","size","networkName","wallet","walletConnect","DropdownButton","id","align","title","concat","first4Account","last4Account","Dropdown","Item","account","Divider","setWalletTrigger","WalletDisconnect","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","connectWallet","stop","fox","WalletConnect","walletconnectLogo","Component","Main","style","fontSize","color","minWidth","scope","poolLength","web3Bsc","utils","fromWei","purseTokenTotalSupply","totalrewardperblock","poolCapRewardToken","poolMintedRewardToken","poolRewardToken","Menu","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isShown","changeBackgroundColor","bind","assertThisInitialized","console","log","setState","_this2","ButtonGroup","Button_Button","component","purse2","purseTokenUpgradableBalance","totalpendingReward","farmLoading","poolSegmentInfo","map","key","i","indexOf","maxWidth","lpTokenSegmentAsymbol","lpTokenSegmentBsymbol","aprloading","parseFloat","apr","toFixed","reactjs_popup_esm","trigger","position","top","bs_index_esm","on","offsetY","offsetX","bonusMultiplier","userSegmentInfo","pendingSegmentReward","tvl","marginTop","setTrigger","setI","type","event","preventDefault","harvest","Deposit","message","txValidAmount","txDeposit","txWithdraw","clickHandlerDeposit","clickHandlerWithdraw","result","isNaN","n","alert","pancake","onSubmit","amount","input","value","toString","toWei","bigInt","lpTokenSegmentBalance","deposit","withdraw","lpTokenSegmentAllowance","ref","placeholder","onChange","e","target","changeHandler","required","approve","asterisk","Popup","CloseButton","children","App","metamask","ethereum","request","method","then","_callee5","_context5","switchNetwork","sent","catch","err","code","error","_callee6","provider","accounts","_context6","WalletConnectProvider","rpc","97","chainId","enable","Web3","web3Con","eth","net","getId","getAccounts","substring","slice","handleAccountsChanged","_callee7","_context7","disconnect","_callee8","_context8","params","t0","rpcUrls","chainName","nativeCurrency","name","symbol","decimals","blockExplorerUrls","t1","length","handleChainChanged","_ref5","_callee9","_chainId","_context9","networkId","_x","apply","arguments","delay","ms","Promise","res","setTimeout","_ref6","_callee12","lpTokenAddress","restakingFarmData","restakingFarm","_lpTokenAddress","_restakingFarmData2","_restakingFarm","_context12","loading","lpToken","RestakingFarm","networks","Contract","abi","address","methods","send","from","_ref7","_callee10","userInfo","lpTokenPair","lpTokenBalance","pendingReward","_context10","IPancakePair","balanceOf","purseTokenUpgradable","_x5","web3","_ref8","_callee11","_context11","_x6","componentWillMount","_x2","_x3","_x4","_ref9","_callee15","_lpTokenAddress2","_lpToken","_context15","LpToken","_address","_ref10","_callee13","lpTokenAllowance","_context13","allowance","_x9","_ref11","_callee14","_context14","_x10","_x7","_x8","_ref12","_callee18","_lpTokenAddress3","_restakingFarmData3","_context18","_ref13","_callee16","_context16","_x14","_ref14","_callee17","_context17","_x15","_x11","_x12","_x13","_ref15","_callee21","_restakingFarmData4","_restakingFarm3","_lpTokenAddress4","_context21","claimReward","_ref16","_callee19","_context19","_x18","_ref17","_callee20","_context20","_x19","_x16","_x17","pair","buttonPopup","_ref18","_callee22","_context22","_x20","loadWeb3","loadBlockchainData","loadTVLAPR","connected","chainID","purseTokenUpgradableData","PurseTokenUpgradable","totalSupply","capMintToken","totalMintToken","lpTokenAsymbols","lpTokenBsymbols","lpTokenAddresses","lpTokenPairAs","lpTokenPairBs","lpTokenPairsymbols","poolTokenList","poolInfo","token0","lpTokenPairA","token1","lpTokenPairB","lpTokenA","lpTokenB","lpTokenPairsymbol","lpTokenAsymbol","lpTokenBsymbol","parseInt","pursePerBlock","toLocaleString","useGrouping","lpTokenValue","lpTokenInContract","lpTokenTSupply","lpTokenABalanceContract","lpTokenBBalanceContract","tokenAPrice","tokenBPrice","BNBPrice","Price","WETHPrice","USDCPrice","BTCPrice","currentProvider","fetch","response","json","myJson","USDTPrice","BUSDPrice","maincontent","menucontent","depositcontent","oneinchcontent","components_Main","components_Menu","components_Deposit","_1inch","react_router_dom","Navbar","role","react_router","path","exact","src_components_Popup","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7bdae9f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/purse-.2f99ffe5.png\";","module.exports = __webpack_public_path__ + \"static/media/asterisk.d69fefca.png\";","module.exports = __webpack_public_path__ + \"static/media/pancakeswap.bdd7c45a.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask-fox.c06f3a3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/walletconnect-logo.37f2bc6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/purse.6cad2843.png\";","import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: transparent;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.5rem calc((100vw - 1100px) / 2);\r\n  z-index: 10;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #D3D3D3;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0.0rem;\r\n  height: 100%;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    color: #c37aff;\r\n  }\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: #04f7ff;\r\n  }\r\n`;\r\n\r\nexport const NavLink0 = styled(Link)`\r\n  color: #D3D3D3;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0.0rem;\r\n  height: 100%;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    color:  #D3D3D3;\r\n  }\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: #04f7ff;\r\n  }\r\n`;\r\n\r\nexport const NavLinkHome = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0.0rem;\r\n  height: 100%;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    color:  #fff;\r\n  }\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport const NavLink2 = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0.0rem;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  color: #c37aff;\r\n\r\n  &.active {\r\n    color: #c37aff;\r\n  }\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: #04f7ff;\r\n  }\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n  /* Second Nav */\r\n  /* margin-right: 24px; */\r\n\r\n  /* Third Nav */\r\n  /* width: 100vw;\r\n  white-space: nowrap; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n\r\n  /* Third Nav */\r\n  /* justify-content: flex-end;\r\n  width: 100vw; */\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink0 = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #256ce1;\r\n  padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n\r\n  /* Second Nav */\r\n  margin-left: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #010606;\r\n  }\r\n`;\r\nexport const NavBtnLink1 = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #ff0000;\r\n  padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n\r\n  /* Second Nav */\r\n  margin-left: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #010606;\r\n  }\r\n`;\r\nexport const NavBtnLink2 = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #228B22;\r\n  padding: 10px 22px;\r\n  color: \t#fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n\r\n  /* Second Nav */\r\n  margin-left: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #010606;\r\n  }\r\n`;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n// import Navbar from 'react-bootstrap/Navbar'\r\nimport purse from '../purse.png'\r\nimport fox from '../metamask-fox.svg'\r\nimport walletconnectLogo from '../walletconnect-logo.svg'\r\nimport Identicon from 'identicon.js';\r\nimport Button from '@material-ui/core/Button';\r\nimport Buttons from 'react-bootstrap/Button'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\n// import web3connect from 'web3connect';\r\n\r\nimport {\r\n  NavLink2,\r\n  NavLink,\r\n  NavLink0,\r\n  NavLinkHome\r\n  // Bars,\r\n  // NavMenu,\r\n  // NavBtn\r\n} from './NavMenu'\r\n\r\n\r\nclass Navb extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n\r\n        <div\r\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0 rowC\"\r\n        >\r\n          <div>\r\n            <NavLinkHome to='/menu' onClick={() => {\r\n              window.open(`https://www.pundix.com/`, '_blank')\r\n            }}>\r\n              <img src={purse} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n              &nbsp; <b>LP Restaking Farm</b></NavLinkHome></div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n          <div>\r\n            <NavLink to='/home' >Home</NavLink>\r\n          </div>&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            <NavLink to='/menu' >Menu</NavLink>\r\n          </div>&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            <NavLink0 to='/menu' onClick={() => {\r\n              window.open(`https://pundix-purse.gitbook.io/untitled/`, '_blank')\r\n            }}> Docs\r\n            </NavLink0>\r\n          </div>&nbsp;\r\n        </div>\r\n\r\n        <span>\r\n          <ul className=\"navbar-nav px-3\">\r\n            <li className=\"nav-item text-nowrap-small d-none d-sm-none d-sm-block\">\r\n              <div className=\"text-light rowC\">\r\n                <div>\r\n                  <NavLink2 to='/menu' onClick={() => {\r\n                    window.open(`https://pancakeswap.finance/swap`, '_blank')\r\n                  }}>\r\n                    <img src={purse} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />&nbsp;\r\n                    ${this.props.PURSEPrice}\r\n                  </NavLink2>\r\n                </div>&nbsp;&nbsp;\r\n                <div>\r\n                  <Buttons variant=\"info\" size=\"sm\" onClick={() => {\r\n                  }}>{this.props.networkName}\r\n                  </Buttons>\r\n                </div>&nbsp;\r\n                <div>\r\n                  {this.props.wallet||this.props.walletConnect ?\r\n                    <DropdownButton\r\n                      id=\"dropdown-menu-align-end\"\r\n                      variant=\"secondary\"\r\n                      size=\"sm\"\r\n                      align=\"end\"\r\n                      title={`${this.props.first4Account}...${this.props.last4Account}`}\r\n                    >\r\n                      <Dropdown.Item onClick={() => {\r\n                        window.open(`https://testnet.bscscan.com/address/${this.props.account}`, '_blank')\r\n                      }}\r\n                      >Wallet</Dropdown.Item>\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.Item variant=\"dark\" onClick={() => {\r\n                        this.props.setWalletTrigger(false)\r\n                        if (this.props.walletConnect == true) {\r\n                          this.props.WalletDisconnect()\r\n                        }\r\n                      }}>Disconnect</Dropdown.Item>\r\n                    </DropdownButton>\r\n                    : <DropdownButton\r\n                      id=\"dropdown-menu-align-end\"\r\n                      variant=\"secondary\"\r\n                      size=\"sm\"\r\n                      align=\"end\"\r\n                      title=\"Connect Wallet\"\r\n                    >\r\n                      <Dropdown.Item onClick={async () => {\r\n                        await this.props.connectWallet()\r\n                      }\r\n                      }><img src={fox} width=\"23\" height=\"23\" className=\"d-inline-block\" alt=\"\"/>&nbsp; Metamask</Dropdown.Item>\r\n                      <Dropdown.Divider />\r\n                      <Dropdown.Item variant=\"dark\" onClick={() => {\r\n                        this.props.WalletConnect()\r\n                      }}><img src={walletconnectLogo} width=\"26\" height=\"23\" className=\"d-inline-block\" alt=\"\"/>&nbsp;WalletConnect</Dropdown.Item>\r\n                    </DropdownButton>}\r\n                </div>&nbsp;\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </span>\r\n      </nav>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navb;\r\n","import React, { Component } from 'react'\r\nimport asterisk from '../asterisk.png'\r\n\r\nclass Main extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"content\" className=\"mt-3\">\r\n\r\n\r\n\r\n        <label className=\"textWhite center\" style={{ fontSize : '40px' }}><big><b>Farm Info</b></big></label>\r\n\r\n        <div className=\"center\" style={{ color: 'white' }}>&nbsp;Stake <b>&nbsp;Pancakeswap or 1Inch LP Tokens&nbsp;</b> to earn PURSE!!!</div>\r\n        <br /><br />\r\n        <div className=\"card mb-4 cardbody\" style={{ minWidth: '350px' }} >\r\n          <div className=\"card-body\">\r\n            <table className=\"table table-borderless textWhiteSmall text-center\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Total Pool</th>\r\n                  <th scope=\"col\">PURSE Token Total Supply</th>\r\n                  <th scope=\"col\">Total New PURSE Reward per block</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{this.props.poolLength}</td>\r\n                  <td>{window.web3Bsc.utils.fromWei(this.props.purseTokenTotalSupply, 'Ether')} Purse</td>\r\n                  <td>{window.web3Bsc.utils.fromWei(this.props.totalrewardperblock, 'Ether')} Purse</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <br />\r\n            <table className=\"table table-borderless textWhiteSmall text-center\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Farm Cap Reward Token</th>\r\n                  <th scope=\"col\">Farm Minted Reward Token</th>\r\n                  <th scope=\"col\">Farm's Reward Token</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{window.web3Bsc.utils.fromWei(this.props.poolCapRewardToken, 'Ether')} Purse</td>\r\n                  <td>{window.web3Bsc.utils.fromWei(this.props.poolMintedRewardToken, 'Ether')} Purse</td>\r\n                  <td>{window.web3Bsc.utils.fromWei(this.props.poolRewardToken, 'Ether')} Purse</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div></div>\r\n        <br /><br /><br />\r\n\r\n        <div className=\"text\" style={{ color: 'grey' }}>&nbsp;<big>Remarks:</big></div><br />\r\n        <div className=\"text\" style={{ color: 'grey' }}>&nbsp;<small>Farm Cap Reward Token: Total capacity reward tokens will be minted by this farm.</small></div>\r\n        <div className=\"text\" style={{ color: 'grey' }}>&nbsp;<small>Farm Minted Reward Token: Total reward tokens minted by this farm until now.</small></div>\r\n        <div className=\"text\" style={{ color: 'grey' }}>&nbsp;<small>Farm's Reward Token: Total reward tokens inside this farm (smart contract).</small></div>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport purse from '../purse.png'\r\nimport purse2 from '../purse-.png'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Button from '@material-ui/core/Button';\r\nimport Buttons from 'react-bootstrap/Button'\r\nimport bigInt from 'big-integer'\r\nimport './App.css';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport { BsFillQuestionCircleFill } from 'react-icons/bs';\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isShown: false\r\n        }\r\n        this.changeBackgroundColor = this.changeBackgroundColor.bind(this)\r\n    }\r\n\r\n    changeBackgroundColor() {\r\n        console.log(\"clicked\")\r\n        this.setState({\r\n            isShown: true\r\n        })\r\n        console.log(this.state.isShown)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"content\" className=\"mt-3\">\r\n                <div className=\"text-center\">\r\n                    <ButtonGroup>\r\n                        <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/menu/\" >pancakeswap</Button>\r\n                        <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"/oneinch/\" >1inch</Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n                <br /><br />\r\n                <div className=\"center img\">\r\n                    <img src={purse2} height='90' alt=\"\" />\r\n                </div><br />\r\n                <h1 className=\"textWhite center\"><b>LP Restaking Farm</b></h1>\r\n                <div className=\"center\" style={{ color: 'silver' }}>&nbsp;Stake <b>&nbsp;Pancakeswap LP Tokens&nbsp;</b> to earn PURSE!!!</div>\r\n                <br />\r\n\r\n                <div className=\"rowC center\">\r\n                    <div className=\"card mb-4 cardbody\" style={{ minWidth: '350px', color: 'silver' }} >\r\n                        <div className=\"card-body\">\r\n                            <span>\r\n                                <span className=\"float-left\">\r\n                                    Your PURSE Balance<br /><b>{window.web3Bsc.utils.fromWei(this.props.purseTokenUpgradableBalance, 'Ether')}</b>\r\n                                    <div>\r\n                                    </div>\r\n                                </span><br /><br /><br />\r\n                            </span>\r\n                            <span>\r\n                                <small>\r\n                                    <span className=\"float-left\">Total Pending harvest</span>\r\n                                    <span className=\"float-right\">\r\n                                        <span>\r\n                                            {window.web3Bsc.utils.fromWei(this.props.totalpendingReward, 'Ether')}&nbsp;PURSE\r\n                                        </span>\r\n                                    </span>\r\n                                </small>\r\n                            </span>\r\n                        </div>\r\n                    </div> &nbsp;&nbsp;&nbsp;\r\n\r\n                    <div className=\"card mb-4 cardbody\" >\r\n                        <div className=\"card-body \" style={{ minWidth: '350px', color: 'silver' }}>\r\n                            <span>\r\n                                <span className=\"float-left\">\r\n                                    Total PURSE Supply<br /><b>{window.web3Bsc.utils.fromWei(this.props.purseTokenTotalSupply, 'Ether')}</b>\r\n                                    <div>\r\n                                    </div>\r\n                                </span><br /><br /><br />\r\n                                <span>\r\n                                    <small>\r\n                                        <span className=\"float-left \">Total Reward/block</span>\r\n                                        <span className=\"float-right \">\r\n                                            <span>\r\n                                                {window.web3Bsc.utils.fromWei(this.props.totalrewardperblock, 'Ether')}&nbsp;PURSE\r\n                                            </span>\r\n                                        </span>\r\n                                    </small>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <br />\r\n                <div className=\"center\" style={{ color: 'white' }}><b><big>Select Your Favourite pool entrees!</big></b></div>\r\n                <div className=\"center\" style={{ color: 'grey' }}><small>&nbsp;! Attention:&nbsp;Be sure to familiar with protocol risks and fees before using the farms!</small></div>\r\n                <br />\r\n\r\n\r\n                {/* ################################################################################################### */}\r\n                {/* <div className=\"rowC center\">\r\n\r\n                    <div className=\"card mb-4\" style={{ maxWidth: '250px' }}>\r\n                        <div className=\"card-body text-center\">\r\n                            <span>\r\n                                <span className=\"text\">\r\n                                    <img src={purse} height='30' alt=\"\" /><br /><br />\r\n                                    <b>PURSE-USDC</b>\r\n                                    <div>\r\n                                        <span className=\" text-muted\"><small>Deposit<small className=\"textSmall\">PURSE-USDC PANCAKE LP</small> to Earn PURSE</small></span><br /><br />\r\n                                        <span className=\" text-muted\"><small>APY:  {(28000 * 365 * this.props.poolInfo[0].pursePerBlock / this.props.lpTokenInContract[0]) * 100} % </small></span><br />\r\n                                        <span className=\" text-muted\"><small>LP Staked: {window.web3.utils.fromWei(this.props.userInfo[0].amount, 'Ether')}</small></span><br />\r\n                                        <span className=\" text-muted\"><small>TVL: </small></span>\r\n                                        <br /><br />\r\n                                        <Button variant=\"outlined\" color=\"default\" component={Link} to=\"/menu/PURSE-USDC\">Select</Button>\r\n                                    </div>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>&nbsp;&nbsp;&nbsp;\r\n\r\n                    <div className=\"card mb-4\" style={{ maxWidth: '250px' }}>\r\n                        <div className=\"card-body text-center\">\r\n                            <span>\r\n                                <span className=\"text\">\r\n                                    <img src={purse} height='30' alt=\"\" /><br /><br />\r\n                                    <b>PURSE-BNB</b>\r\n                                    <div>\r\n                                        <span className=\" text-muted\"><small>Deposit<small className=\"textSmall\">PURSE-BNB PANCAKE LP</small> to Earn PURSE</small></span><br /><br />\r\n                                        <span className=\" text-muted\"><small>APY:  {(28000 * 365 * this.props.poolInfo[1].pursePerBlock / this.props.lpTokenInContract[1]) * 100} % </small></span><br />\r\n                                        <span className=\" text-muted\"><small>LP Staked: {window.web3.utils.fromWei(this.props.userInfo[1].amount, 'Ether')}</small></span><br />\r\n                                        <span className=\" text-muted\"><small>TVL: </small></span>\r\n                                        <br /><br />\r\n                                        <Button variant=\"outlined\" color=\"default\" component={Link} to=\"/menu/PURSE-BNB\">Select</Button>\r\n                                    </div>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n\r\n\r\n                {/* <div className=\"center\" style={{ color: 'grey' }}><b><big>Dynamic added farm in progress...</big></b></div><br/> */}\r\n\r\n                {this.props.farmLoading ?\r\n                    <div className=\"row floated\" >\r\n                        {this.props.poolSegmentInfo[0].map((poolSegmentInfo, key) => {\r\n                            let i = this.props.poolSegmentInfo[0].indexOf(poolSegmentInfo)\r\n                            return (\r\n                                <div key={key}>\r\n                                    <div className=\"col\">\r\n                                        <div className=\"card mb-4 cardbody card-body text-center\" style={{ maxWidth: '230px', color: 'silver' }}>\r\n                                            <span>\r\n                                                <img src={purse} height='30' alt=\"\" /><br />\r\n                                                <b className=\"text\">{this.props.lpTokenSegmentAsymbol[0][i]}-{this.props.lpTokenSegmentBsymbol[0][i]}</b>\r\n                                                <div>\r\n                                                    <span className=\" \"><small>Deposit<small className=\"textSmall\">{this.props.lpTokenSegmentAsymbol[0][i]}-{this.props.lpTokenSegmentBsymbol[0][i]} PANCAKE LP</small> to Earn PURSE</small></span><br /><br />\r\n\r\n                                                    <span className=\"\" style={{ color: 'silver' }}> {this.props.aprloading ?\r\n                                                        <div className=\"\">\r\n                                                            <span><small>APR: {parseFloat(this.props.apr[0][i]).toFixed(3)} % &nbsp;</small></span>\r\n                                                            <span className=\"\">\r\n                                                                <Popup trigger={open => (\r\n                                                                    <span style={{ position: \"relative\", top: '-1px' }}><BsFillQuestionCircleFill size={10} /></span>\r\n                                                                )}\r\n                                                                    on=\"hover\"\r\n                                                                    position=\"right center\"\r\n                                                                    offsetY={-50}\r\n                                                                    offsetX={10}\r\n                                                                ><span className=\"textInfo\"><small>APR are affected by the price of PURSE which has not yet stabilized. </small></span>\r\n                                                                    <span className=\"textInfo\"><small>If it shows 'NaN' or 'Infinity', it means currently the pool has no LP token staked. </small></span>\r\n                                                                </Popup></span> </div> :\r\n                                                        <div className=\"\">\r\n                                                            <span><small>APR:</small></span>&nbsp;&nbsp;\r\n                                                            <span className=\"lds-dual-ring\"><div></div><div></div><div></div></span>\r\n                                                        </div>} </span>\r\n\r\n                                                    <span className=\"\"><small>Bonus Multiplier: {this.props.bonusMultiplier[0][i]}x &nbsp;\r\n                                                        <Popup\r\n                                                            trigger={open => (\r\n                                                                <span style={{ position: \"relative\", top: '-0.8px' }}><BsFillQuestionCircleFill size={10} /></span>\r\n                                                            )}\r\n                                                            on=\"hover\"\r\n                                                            position=\"right center\"\r\n                                                            offsetY={-50}\r\n                                                            offsetX={5}\r\n                                                        >\r\n                                                            <span className=\"textInfo\"><small>The Multiplier represents the proportion of PURSE rewards each farm receives, as a proportion of the PURSE produced each block.</small><br /></span>\r\n                                                            <span className=\"textInfo\"><small>For example, if a 1x farm received 1 PURSE per block, a 40x farm would receive 40 PURSE per block.</small><br /></span>\r\n                                                            <span className=\"textInfo\"><small>This amount is already included in all APR calculations for the farm. </small></span></Popup>&nbsp;</small></span><br />\r\n\r\n                                                    <span className=\" \"><small>LP Staked: {parseFloat(this.props.userSegmentInfo[0][i])}</small></span><br />\r\n                                                    <span className=\" \"><small>Purse Earned: {parseFloat(this.props.pendingSegmentReward[0][i])}</small></span><br />\r\n                                                    <span className=\" \"><small>{this.props.aprloading ? <div className=\"\">TVL: $ {parseFloat(this.props.tvl[0][i]).toFixed(3)} </div> :\r\n                                                        <div className=\"\">\r\n                                                            <span><small>TVL:</small></span>&nbsp;&nbsp;\r\n                                                            <span className=\"lds-dual-ring\"><div></div><div></div><div></div></span>\r\n                                                        </div>} </small></span><br />\r\n\r\n                                                    <Buttons variant=\"outline-info\" size=\"sm\" style={{ minWidth: '80px', marginTop: '10px' }} className=\"mb-2\" onClick={() => {\r\n                                                        this.props.setTrigger(true)\r\n                                                        this.props.setI(0, i)\r\n                                                    }}>Select</Buttons>\r\n                                                    <div >\r\n                                                        <Buttons\r\n                                                            variant=\"outline-success\"\r\n                                                            type=\"submit\"\r\n                                                            size=\"sm\"\r\n                                                            style={{ minWidth: '80px' }}\r\n                                                            onClick={(event) => {\r\n                                                                event.preventDefault()\r\n                                                                this.props.harvest(i, \"0\")\r\n                                                            }}>\r\n                                                            Harvest\r\n                                                        </Buttons>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    :\r\n                    <div className=\"center\">\r\n                        <div className=\"bounceball\"></div> &nbsp;\r\n                        <div className=\"textLoadingSmall\">NETWORK IS Loading...</div>\r\n                    </div>\r\n                }\r\n\r\n\r\n\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport purse from '../purse.png'\r\nimport purse2 from '../purse-.png'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Button from '@material-ui/core/Button';\r\nimport Buttons from 'react-bootstrap/Button'\r\nimport bigInt from 'big-integer'\r\nimport './App.css';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport { BsFillQuestionCircleFill } from 'react-icons/bs';\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isShown: false\r\n        }\r\n        this.changeBackgroundColor = this.changeBackgroundColor.bind(this)\r\n    }\r\n\r\n    changeBackgroundColor() {\r\n        console.log(\"clicked\")\r\n        this.setState({\r\n            isShown: true\r\n        })\r\n        console.log(this.state.isShown)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"content\" className=\"mt-3\">\r\n                <div className=\"text-center\">\r\n                    <ButtonGroup>\r\n                        <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"/menu/\" >pancakeswap</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/oneinch/\" >1inch</Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n                <br /><br />\r\n                <div className=\"center img\">\r\n                    <img src={purse2} height='90' alt=\"\" />\r\n                </div><br />\r\n                <h1 className=\"textWhite center\"><b>LP Restaking Farm</b></h1>\r\n                <div className=\"center\" style={{ color: 'silver' }}>&nbsp;Stake <b>&nbsp;1INCH LP Tokens&nbsp;</b> to earn PURSE!!!</div>\r\n                <br />\r\n\r\n                <div className=\"rowC center\">\r\n                    <div className=\"card mb-4 cardbody\" style={{ minWidth: '350px', color: 'silver' }} >\r\n                        <div className=\"card-body\">\r\n                            <span>\r\n                                <span className=\"float-left\">\r\n                                    Your PURSE Balance<br /><b>{window.web3Bsc.utils.fromWei(this.props.purseTokenUpgradableBalance, 'Ether')}</b>\r\n                                    <div>\r\n                                    </div>\r\n                                </span><br /><br /><br />\r\n                            </span>\r\n                            <span>\r\n                                <small>\r\n                                    <span className=\"float-left\">Total Pending harvest</span>\r\n                                    <span className=\"float-right\">\r\n                                        <span>\r\n                                            {window.web3Bsc.utils.fromWei(this.props.totalpendingReward, 'Ether')}&nbsp;PURSE\r\n                                        </span>\r\n                                    </span>\r\n                                </small>\r\n                            </span>\r\n                        </div>\r\n                    </div> &nbsp;&nbsp;&nbsp;\r\n\r\n                    <div className=\"card mb-4 cardbody\" >\r\n                        <div className=\"card-body \" style={{ minWidth: '350px', color: 'silver' }}>\r\n                            <span>\r\n                                <span className=\"float-left\">\r\n                                    Total PURSE Supply<br /><b>{window.web3Bsc.utils.fromWei(this.props.purseTokenTotalSupply, 'Ether')}</b>\r\n                                    <div>\r\n                                    </div>\r\n                                </span><br /><br /><br />\r\n                                <span>\r\n                                    <small>\r\n                                        <span className=\"float-left \">Total Reward/block</span>\r\n                                        <span className=\"float-right \">\r\n                                            <span>\r\n                                                {window.web3Bsc.utils.fromWei(this.props.totalrewardperblock, 'Ether')}&nbsp;PURSE\r\n                                            </span>\r\n                                        </span>\r\n                                    </small>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <br />\r\n                <div className=\"center\" style={{ color: 'white' }}><b><big>Select Your Favourite pool entrees!</big></b></div>\r\n                <div className=\"center\" style={{ color: 'grey' }}><small>&nbsp;! Attention:&nbsp;Be sure to familiar with protocol risks and fees before using the farms!</small></div>\r\n                <br />\r\n\r\n\r\n                {/* ################################################################################################### */}\r\n                {/* <div className=\"rowC center\">\r\n\r\n                    <div className=\"card mb-4\" style={{ maxWidth: '250px' }}>\r\n                        <div className=\"card-body text-center\">\r\n                            <span>\r\n                                <span className=\"text\">\r\n                                    <img src={purse} height='30' alt=\"\" /><br /><br />\r\n                                    <b>PURSE-USDC</b>\r\n                                    <div>\r\n                                        <span className=\" text-muted\"><small>Deposit<small className=\"textSmall\">PURSE-USDC PANCAKE LP</small> to Earn PURSE</small></span><br /><br />\r\n                                        <span className=\" text-muted\"><small>APY:  {(28000 * 365 * this.props.poolInfo[1].pursePerBlock / this.props.lpTokenInContract[1]) * 100} % </small></span><br />\r\n                                        <span className=\" text-muted\"><small>LP Staked: {window.web3.utils.fromWei(this.props.userInfo[1].amount, 'Ether')}</small></span><br />\r\n                                        <span className=\" text-muted\"><small>TVL: </small></span>\r\n                                        <br /><br />\r\n                                        <Button variant=\"outlined\" color=\"default\" component={Link} to=\"/menu/PURSE-USDC\">Select</Button>\r\n                                    </div>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>&nbsp;&nbsp;&nbsp;\r\n\r\n                    <div className=\"card mb-4\" style={{ maxWidth: '250px' }}>\r\n                        <div className=\"card-body text-center\">\r\n                            <span>\r\n                                <span className=\"text\">\r\n                                    <img src={purse} height='30' alt=\"\" /><br /><br />\r\n                                    <b>PURSE-BNB</b>\r\n                                    <div>\r\n                                        <span className=\" text-muted\"><small>Deposit<small className=\"textSmall\">PURSE-BNB PANCAKE LP</small> to Earn PURSE</small></span><br /><br />\r\n                                        <span className=\" text-muted\"><small>APY:  {(28000 * 365 * this.props.poolInfo[1].pursePerBlock / this.props.lpTokenInContract[1]) * 100} % </small></span><br />\r\n                                        <span className=\" text-muted\"><small>LP Staked: {window.web3.utils.fromWei(this.props.userInfo[1].amount, 'Ether')}</small></span><br />\r\n                                        <span className=\" text-muted\"><small>TVL: </small></span>\r\n                                        <br /><br />\r\n                                        <Button variant=\"outlined\" color=\"default\" component={Link} to=\"/menu/PURSE-BNB\">Select</Button>\r\n                                    </div>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n\r\n\r\n                {/* <div className=\"center\" style={{ color: 'grey' }}><b><big>Dynamic added farm in progress...</big></b></div><br/> */}\r\n\r\n                {this.props.farmLoading ?\r\n                    <div className=\"row floated\" >\r\n                        {this.props.poolSegmentInfo[1].map((poolSegmentInfo, key) => {\r\n                            let i = this.props.poolSegmentInfo[1].indexOf(poolSegmentInfo)\r\n                            return (\r\n                                <div key={key}>\r\n                                    <div className=\"col\">\r\n                                        <div className=\"card mb-4 cardbody card-body text-center\" style={{ maxWidth: '230px', color: 'silver' }}>\r\n                                            <span>\r\n                                                <img src={purse} height='30' alt=\"\" /><br />\r\n                                                <b className=\"text\">{this.props.lpTokenSegmentAsymbol[1][i]}-{this.props.lpTokenSegmentBsymbol[1][i]}</b>\r\n                                                <div>\r\n                                                    <span className=\" \"><small>Deposit<small className=\"textSmall\">{this.props.lpTokenSegmentAsymbol[1][i]}-{this.props.lpTokenSegmentBsymbol[1][i]} 1INCH LP</small> to Earn PURSE</small></span><br /><br />\r\n\r\n                                                    <span className=\"\" style={{ color: 'silver' }}> {this.props.aprloading ?\r\n                                                        <div className=\"\">\r\n                                                            <span><small>APR: {parseFloat(this.props.apr[1][i]).toFixed(3)} % &nbsp;</small></span>\r\n                                                            <span className=\"\">\r\n                                                                <Popup trigger={open => (\r\n                                                                    <span style={{ position: \"relative\", top: '-1px' }}><BsFillQuestionCircleFill size={10} /></span>\r\n                                                                )}\r\n                                                                    on=\"hover\"\r\n                                                                    position=\"right center\"\r\n                                                                    offsetY={-50}\r\n                                                                    offsetX={10}\r\n                                                                ><span className=\"textInfo\"><small>APR are affected by the price of PURSE which has not yet stabilized. </small></span>\r\n                                                                    <span className=\"textInfo\"><small>If it shows 'NaN' or 'Infinity', it means currently the pool has no LP token staked. </small></span>\r\n                                                                </Popup></span> </div> :\r\n                                                        <div className=\"\">\r\n                                                            <span><small>APR:</small></span>&nbsp;&nbsp;\r\n                                                            <span className=\"lds-dual-ring\"><div></div><div></div><div></div></span>\r\n                                                        </div>} </span>\r\n\r\n                                                    <span className=\"\"><small>Bonus Multiplier: {this.props.bonusMultiplier[1][i]}x &nbsp;\r\n                                                        <Popup\r\n                                                            trigger={open => (\r\n                                                                <span style={{ position: \"relative\", top: '-0.8px' }}><BsFillQuestionCircleFill size={10} /></span>\r\n                                                            )}\r\n                                                            on=\"hover\"\r\n                                                            position=\"right center\"\r\n                                                            offsetY={-50}\r\n                                                            offsetX={5}\r\n                                                        >\r\n                                                            <span className=\"textInfo\"><small>The Multiplier represents the proportion of PURSE rewards each farm receives, as a proportion of the PURSE produced each block.</small><br /></span>\r\n                                                            <span className=\"textInfo\"><small>For example, if a 1x farm received 1 PURSE per block, a 40x farm would receive 40 PURSE per block.</small><br /></span>\r\n                                                            <span className=\"textInfo\"><small>This amount is already included in all APR calculations for the farm. </small></span></Popup>&nbsp;</small></span><br />\r\n\r\n                                                    <span className=\" \"><small>LP Staked: {parseFloat(this.props.userSegmentInfo[1][i])}</small></span><br />\r\n                                                    <span className=\" \"><small>Purse Earned: {parseFloat(this.props.pendingSegmentReward[1][i])}</small></span><br />\r\n                                                    <span className=\" \"><small>{this.props.aprloading ? <div className=\"\">TVL: $ {parseFloat(this.props.tvl[1][i]).toFixed(3)} </div> :\r\n                                                        <div className=\"\">\r\n                                                            <span><small>TVL:</small></span>&nbsp;&nbsp;\r\n                                                            <span className=\"lds-dual-ring\"><div></div><div></div><div></div></span>\r\n                                                        </div>} </small></span><br />\r\n\r\n                                                    <Buttons variant=\"outline-info\" size=\"sm\" style={{ minWidth: '80px', marginTop: '10px' }} className=\"mb-2\" onClick={() => {\r\n                                                        this.props.setTrigger(true)\r\n                                                        this.props.setI(1, i)\r\n                                                    }}>Select</Buttons>\r\n                                                    <div >\r\n                                                        <Buttons\r\n                                                            variant=\"outline-success\"\r\n                                                            type=\"submit\"\r\n                                                            size=\"sm\"\r\n                                                            style={{ minWidth: '80px' }}\r\n                                                            onClick={(event) => {\r\n                                                                event.preventDefault()\r\n                                                                this.props.harvest(i, \"1\")\r\n                                                            }}>\r\n                                                            Harvest\r\n                                                        </Buttons>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    :\r\n                    <div className=\"center\">\r\n                        <div className=\"bounceball\"></div> &nbsp;\r\n                        <div className=\"textLoadingSmall\">NETWORK IS Loading...</div>\r\n                    </div>\r\n                }\r\n\r\n\r\n\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react'\r\n// import { Link } from 'react-router-dom';\r\n// import dai from '../uniswap-uni-logo.png'\r\nimport asterisk from '../asterisk.png'\r\nimport purse from '../purse.png'\r\nimport pancake from '../pancakeswap.png'\r\nimport bigInt from 'big-integer'\r\nimport './App.css';\r\n\r\nclass Deposit extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      message: ''\r\n    }\r\n    this.state = {\r\n      txValidAmount: false\r\n    }\r\n    this.state = {\r\n      txDeposit: false\r\n    }\r\n    this.state = {\r\n      txWithdraw: false\r\n    }\r\n    this.clickHandlerDeposit = this.clickHandlerDeposit.bind(this)\r\n    this.clickHandlerWithdraw = this.clickHandlerWithdraw.bind(this)\r\n  }\r\n\r\n  changeHandler(event) {\r\n    let result = !isNaN(+event); // true if its a number, false if not\r\n\r\n    if (event == \"\") {\r\n      this.setState({\r\n        message: ''\r\n      })\r\n      this.setState({\r\n        txValidAmount: false\r\n      })\r\n    } else if (result == false) {\r\n      this.setState({\r\n        message: 'Not a valid number'\r\n      })\r\n      this.setState({\r\n        txValidAmount: false\r\n      })\r\n      // console.log(this.state.txValid)\r\n    } else if (event <= 0) {\r\n      this.setState({\r\n        message: 'Value need to be greater than 0'\r\n      })\r\n      this.setState({\r\n        txValidAmount: false\r\n      })\r\n    } \r\n    // else if (bigInt(window.web3.utils.toWei(event, 'ether')).value > bigInt(this.props.lpTokenSegmentBalance[this.props.n][this.props.i]).value) {\r\n    //   this.setState({\r\n    //     message: 'Not enough Balance'\r\n    //   })\r\n    //   this.setState({\r\n    //     txValidAmount: false\r\n    //   })\r\n    // }\r\n    else {\r\n      this.setState({\r\n        message: ''\r\n      })\r\n      this.setState({\r\n        txValidAmount: true\r\n      })\r\n    }\r\n  }\r\n\r\n  clickHandlerDeposit() {\r\n    // console.log(\"clicked\")\r\n    this.setState({\r\n      txDeposit: true,\r\n      txWithdraw: false\r\n    })\r\n  }\r\n\r\n  clickHandlerWithdraw() {\r\n    // console.log(\"clicked\")\r\n    this.setState({\r\n      txDeposit: false,\r\n      txWithdraw: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"content\" className=\"mt-3\">\r\n        <div className=\"text-center\">\r\n          {/* <ButtonGroup>\r\n            <Button variant=\"contained\" color=\"default\" >pancakeswap</Button>\r\n            <Button variant=\"outlined\" color=\"default\" >1inch</Button>\r\n          </ButtonGroup> */}\r\n        </div>\r\n        <br /><br />\r\n\r\n        <h2 className=\"center textWhite\"><b>{this.props.lpTokenSegmentAsymbol[this.props.n][this.props.i]}-{this.props.lpTokenSegmentBsymbol[this.props.n][this.props.i]} Farm</b></h2>\r\n        <br />\r\n        <div className=\"center\" style={{ color: 'silver' }}>&nbsp;Deposit <b>&nbsp;{this.props.lpTokenSegmentAsymbol[this.props.n][this.props.i]}-{this.props.lpTokenSegmentBsymbol[this.props.n][this.props.i]} LP Token&nbsp;</b> and earn PURSE!!!</div>\r\n        {/* <div className=\"center\" style={{ color: 'silver' }}>&nbsp;APY :  {(28000 * 365 * this.props.poolSegmentInfo[this.props.n][this.props.i].pursePerBlock / this.props.lpTokenSegmentInContract[this.props.n][this.props.i]) * 100} %</div> */}\r\n        <br />\r\n\r\n        <div className=\"card mb-4 cardbody\" >\r\n          <div className=\"card-body\">\r\n\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-success btn-sm float-right\"\r\n              style={{ maxWidth: '70px' }}\r\n              onClick={(event) => {\r\n                event.preventDefault()\r\n                if (this.props.pendingSegmentReward[this.props.n][this.props.i] <= 0) {\r\n                  alert(\"No token to harvest! Please deposit PURSE-USDC PANCAKE LP to earn PURSE\")\r\n                } else {\r\n                  console.log(\"...\")\r\n                  console.log(this.props.pendingSegmentReward[this.props.n][this.props.i])\r\n                  this.props.harvest(this.props.i, this.props.n)\r\n                }\r\n              }}>\r\n              <small>Harvest</small>\r\n\r\n            </button>\r\n\r\n            <table className=\"table table-borderless text-center\" style={{ color: 'silver' }}>\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">{this.props.lpTokenSegmentAsymbol[this.props.n][this.props.i]}-{this.props.lpTokenSegmentBsymbol[this.props.n][this.props.i]} LP Staked</th>\r\n                  <th scope=\"col\">PURSE Earned</th>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"col\"><img src={pancake} height='30' alt=\"\" /></th>\r\n                  <th scope=\"col\"><img src={purse} height='30' alt=\"\" /></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{this.props.userSegmentInfo[this.props.n][this.props.i]}</td>\r\n                  <td>{this.props.pendingSegmentReward[this.props.n][this.props.i]}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n\r\n\r\n            <div className=\"card mb-4 cardbody\" >\r\n              <div className=\"card-body\">\r\n                {this.props.wallet || this.props.walletConnect?\r\n\r\n                  <form className=\"mb-3\" onSubmit={(event) => {\r\n                    event.preventDefault()\r\n                    if (this.state.txValidAmount === false) {\r\n                      alert(\"Invalid input! PLease check your input again\")\r\n                    } else {\r\n                      let amount\r\n                      amount = this.input.value.toString()\r\n                      amount = window.web3Bsc.utils.toWei(amount, 'Ether')\r\n                      console.log(this.state.txDeposit)\r\n                      console.log(this.state.txWithdraw)\r\n                      if (this.state.txDeposit === true && this.state.txWithdraw === false) {\r\n                        if (bigInt(amount).value > bigInt(this.props.lpTokenSegmentBalance[this.props.n][this.props.i]).value) {\r\n                          alert(\"Not enough funds\")                          \r\n                        } else {\r\n                          this.props.deposit(this.props.i, amount, this.props.n)\r\n                        }\r\n                      } else if (this.state.txDeposit === false && this.state.txWithdraw === true) {\r\n                        if ((this.input.value) > this.props.userSegmentInfo[this.props.n][this.props.i]) {\r\n                          console.log((this.input.value))\r\n                          console.log(this.props.userSegmentInfo[this.props.n][this.props.i])\r\n                          alert(\"Withdraw tokens more than deposit LP tokens\")   \r\n                        } else {\r\n                          console.log((this.input.value))\r\n                          console.log(this.props.userSegmentInfo[this.props.n][this.props.i])\r\n                          this.props.withdraw(this.props.i, amount, this.props.n)\r\n                        }\r\n                      }\r\n                    }\r\n                  }}>\r\n                    <div>\r\n                      <label className=\"float-left\"><b>Deposit</b></label>\r\n                      <span className=\"float-right\"  style={{ color: 'silver' }}>\r\n                        <span>\r\n                          LP Balance &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: {window.web3Bsc.utils.fromWei(this.props.lpTokenSegmentBalance[this.props.n][this.props.i].toString(), 'Ether')}</span>\r\n                        <span><br />\r\n                          PURSE Balance&nbsp;: {window.web3Bsc.utils.fromWei(this.props.purseTokenUpgradableBalance, 'Ether')}\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <br/><br/><br/>\r\n\r\n                    {this.props.lpTokenSegmentAllowance[this.props.n][this.props.i] > 100000000000000000000000000000 ?\r\n                      <div>\r\n                        <div className=\"input-group mb-4\" >\r\n                          <input\r\n                            type=\"text\"\r\n                            ref={(input) => { this.input = input }}\r\n                            className=\"form-control form-control-lg cardbody\"\r\n                            placeholder=\"0\"\r\n                            onChange={(e) => {\r\n                              const value = e.target.value;\r\n                              // console.log(value)\r\n                              this.changeHandler(value)\r\n                            }}\r\n                            required />\r\n                          <div className=\"input-group-append\">\r\n                            <div className=\"input-group-text cardbody\" style={{ color: 'silver' }}>\r\n                              <img src={pancake} height='25' alt=\"\" />\r\n                              &nbsp;&nbsp;&nbsp; LP\r\n                            </div>\r\n                          </div>\r\n                        </div >\r\n                        <div style={{ color: 'red' }}>{this.state.message} </div>\r\n\r\n                        <div className=\"rowC center\">\r\n                          <button type=\"submit\" className=\"btn btn-primary btn-lg\" onClick={(event) => {\r\n                            console.log(\"clicked deposit...\")\r\n                            this.clickHandlerDeposit()\r\n                          }}> Deposit </button>&nbsp;&nbsp;&nbsp;\r\n                          <button type=\"submit\" className=\"btn btn-primary btn-lg\" onClick={(event) => {\r\n                            console.log(\"clicked withdraw...\")\r\n                            this.clickHandlerWithdraw()\r\n                          }}>Withdraw</button>&nbsp;&nbsp;&nbsp;\r\n                        </div>\r\n                      </div>\r\n                      :\r\n                      <div className=\"rowC center\">                                             \r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\" onClick={(event) => {\r\n                          this.props.approve(this.props.i, this.props.n)\r\n                        }}>Approve</button>\r\n                      </div>\r\n                    }\r\n                  </form>\r\n\r\n\r\n\r\n\r\n                  :\r\n                  <div className=\"rowC center\">\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-lg\" onClick={async () => {\r\n                      console.log(\"clicked withdraw...\")\r\n                      await this.props.connectWallet()\r\n                    }}>Connect Wallet</button>\r\n                  </div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"text-center\" style={{ color: 'grey' }}><img src={asterisk} height='15' />&nbsp;<small>Every time you stake and unstake LP tokens, the contract will automatically harvest PURSE rewards for you!</small></div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Deposit;\r\n","import React, { Component } from 'react'\r\nimport './Popup.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseButton from 'react-bootstrap/CloseButton'\r\n\r\nclass Popup extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.trigger ?\r\n                    <div className=\"popup\">\r\n                        <div className=\"popup-inner ml-auto mr-auto\" >\r\n                                <CloseButton className=\"close\" onClick={() => {\r\n                                    this.props.setTrigger(false)\r\n                                }}>close\r\n                                </CloseButton>\r\n                                {this.props.children}\r\n                        </div>\r\n                    </div>\r\n                    : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Popup;","import React, { Component } from 'react'\r\nimport Web3 from 'web3'\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport LpToken from '../abis/LpToken.json'\r\nimport IPancakePair from '../abis/IPancakePair.json'\r\nimport PurseTokenUpgradable from '../abis/PurseTokenUpgradable.json'\r\nimport RestakingFarm from '../abis/RestakingFarm.json'\r\n\r\nimport Navb from './Navbar'\r\nimport Main from './Main'\r\nimport Menu from './Menu'\r\nimport Oneinch from './1inch'\r\nimport Deposit from './Deposit'\r\nimport Popup from './Popup'\r\n\r\nimport './Popup.css'\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n    this.loadTVLAPR()\r\n    while (this.state.loading == true) {\r\n      await this.loadBlockchainData()\r\n      await this.delay(1000);\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3Bsc = window.web3Bsc\r\n\r\n    const networkId = \"97\"\r\n    this.setState({ networkId })\r\n\r\n    if (this.state.walletConnect == true) {\r\n      if (window.provider.connected == false) {\r\n        await this.WalletDisconnect()\r\n      }\r\n    }\r\n\r\n    if (this.state.metamask == true) {\r\n      const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n      this.setState({ chainId })\r\n\r\n      if (this.state.chainId == \"0x61\") {\r\n        this.setState({ networkName: \"BSC Testnet\" })\r\n      } else if (this.state.chainId == \"0x38\") {\r\n        this.setState({ networkName: \"BSC\" })\r\n      } else if (this.state.chainId == \"0x1\") {\r\n        this.setState({ networkName: \"Ethereum\" })\r\n      } else if (this.state.chainId == \"0x3\") {\r\n        this.setState({ networkName: \"Ropsten\" })\r\n      } else if (this.state.chainId == \"0x4\") {\r\n        this.setState({ networkName: \"Rinkeby\" })\r\n      } else if (this.state.chainId == \"0x2a\") {\r\n        this.setState({ networkName: \"Kovan\" })\r\n      } else if (this.state.chainId == \"0x89\") {\r\n        this.setState({ networkName: \"Polygon\" })\r\n      } else if (this.state.chainId == \"0x13881\") {\r\n        this.setState({ networkName: \"Mumbai\" })\r\n      } else if (this.state.chainId == \"0xa869\") {\r\n        this.setState({ networkName: \"Fuji\" })\r\n      } else if (this.state.chainId == \"0xa86a\") {\r\n        this.setState({ networkName: \"Avalanche\" })\r\n      }\r\n\r\n      window.ethereum.on('chainChanged', this.handleChainChanged);\r\n      window.ethereum.on('accountsChanged', this.handleAccountsChanged);\r\n    } else {\r\n      this.setState({ chainID: \"0x\" })\r\n      this.setState({ networkName: \"Unavailable\" })\r\n    }\r\n\r\n\r\n    if (this.state.wallet == false && this.state.walletConnect == false) {\r\n      // Load PurseTokenUpgradable\r\n      const purseTokenUpgradableData = PurseTokenUpgradable.networks[networkId]\r\n      const restakingFarmData = RestakingFarm.networks[networkId]\r\n\r\n      if (purseTokenUpgradableData) {\r\n        const purseTokenUpgradable = new web3Bsc.eth.Contract(PurseTokenUpgradable.abi, purseTokenUpgradableData.address)\r\n        this.setState({ purseTokenUpgradable })\r\n        let purseTokenUpgradableBalance = 0\r\n        this.setState({ purseTokenUpgradableBalance: purseTokenUpgradableBalance.toString() })\r\n        let purseTokenTotalSupply = await purseTokenUpgradable.methods.totalSupply().call()\r\n        this.setState({ purseTokenTotalSupply: purseTokenTotalSupply.toString() })\r\n        let poolRewardToken = await purseTokenUpgradable.methods.balanceOf(restakingFarmData.address).call()\r\n        this.setState({ poolRewardToken })\r\n      }\r\n\r\n      if (restakingFarmData) {\r\n        const restakingFarm = new web3Bsc.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n        this.setState({ restakingFarm })\r\n        let poolCapRewardToken = await this.state.restakingFarm.methods.capMintToken().call()\r\n        let poolMintedRewardToken = await this.state.restakingFarm.methods.totalMintToken().call()\r\n        let poolLength = await this.state.restakingFarm.methods.poolLength().call()\r\n        this.setState({ poolCapRewardToken })\r\n        this.setState({ poolMintedRewardToken })\r\n        this.setState({ poolLength })\r\n\r\n        let totalrewardperblock = 0\r\n        let poolSegmentInfo = [[], []]\r\n        let lpTokenSegmentBalance = [[], []]\r\n        let lpTokenSegmentAsymbol = [[], []]\r\n        let lpTokenSegmentBsymbol = [[], []]\r\n        let bonusMultiplier = [[], []]\r\n        let userSegmentInfo = [[], []]\r\n        let pendingSegmentReward = [[], []]\r\n\r\n        let lpTokenAsymbols = []\r\n        let lpTokenBsymbols = []\r\n        let lpTokenAddresses = []\r\n        let lpTokenPairAs = []\r\n        let lpTokenPairBs = []\r\n        let lpTokenPairsymbols = []\r\n\r\n        let n = 0\r\n        let i = 0\r\n\r\n        for (i = 0; i < poolLength; i++) {\r\n          let lpTokenAddress = await this.state.restakingFarm.methods.poolTokenList(i).call()\r\n          let poolInfo = await this.state.restakingFarm.methods.poolInfo(lpTokenAddress).call()\r\n          let lpTokenPair = new web3Bsc.eth.Contract(IPancakePair.abi, lpTokenAddress)\r\n          let lpTokenPairA = await lpTokenPair.methods.token0().call()\r\n          let lpTokenPairB = await lpTokenPair.methods.token1().call()\r\n          let lpTokenA = new web3Bsc.eth.Contract(LpToken.abi, lpTokenPairA)\r\n          let lpTokenB = new web3Bsc.eth.Contract(LpToken.abi, lpTokenPairB)\r\n          let lpTokenPairsymbol = await lpTokenPair.methods.symbol().call()\r\n          let lpTokenAsymbol = await lpTokenA.methods.symbol().call()\r\n          let lpTokenBsymbol = await lpTokenB.methods.symbol().call()\r\n\r\n          let lpTokenBalance = 0\r\n          totalrewardperblock += parseInt(poolInfo.pursePerBlock * poolInfo.bonusMultiplier)\r\n\r\n          lpTokenAsymbols[i] = lpTokenAsymbol\r\n          lpTokenBsymbols[i] = lpTokenBsymbol\r\n          lpTokenAddresses[i] = lpTokenAddress\r\n          lpTokenPairAs[i] = lpTokenPairA\r\n          lpTokenPairBs[i] = lpTokenPairB\r\n          lpTokenPairsymbols[i] = lpTokenPairsymbol\r\n\r\n          if (lpTokenPairsymbol == \"Cake-LP\") {\r\n            userSegmentInfo[0][n] = \"\"\r\n            pendingSegmentReward[0][n] = \"\"\r\n            poolSegmentInfo[0][n] = poolInfo\r\n            bonusMultiplier[0][n] = poolInfo.bonusMultiplier\r\n            lpTokenSegmentAsymbol[0][n] = lpTokenAsymbol\r\n            lpTokenSegmentBsymbol[0][n] = lpTokenBsymbol\r\n            lpTokenSegmentBalance[0][n] = lpTokenBalance\r\n            n += 1\r\n          } else {\r\n            userSegmentInfo[1][n] = \"\"\r\n            pendingSegmentReward[1][n] = \"\"\r\n            poolSegmentInfo[1][n] = poolInfo\r\n            bonusMultiplier[1][n] = poolInfo.bonusMultiplier\r\n            lpTokenSegmentAsymbol[1][n] = lpTokenAsymbol\r\n            lpTokenSegmentBsymbol[1][n] = lpTokenBsymbol\r\n            lpTokenSegmentBalance[1][n] = lpTokenBalance\r\n            n += 1\r\n          }\r\n        }\r\n        this.setState({ bonusMultiplier })\r\n        this.setState({ poolSegmentInfo })\r\n        this.setState({ lpTokenSegmentBalance })\r\n        this.setState({ lpTokenSegmentAsymbol })\r\n        this.setState({ lpTokenSegmentBsymbol })\r\n        this.setState({ totalrewardperblock: totalrewardperblock.toLocaleString('fullwide', { useGrouping: false }) })\r\n        this.setState({ pendingSegmentReward: [[], []] })\r\n        this.setState({ userSegmentInfo: [[], []] })\r\n        this.setState({ totalpendingReward: \"0\" })\r\n\r\n        this.setState({ lpTokenAsymbols })\r\n        this.setState({ lpTokenBsymbols })\r\n        this.setState({ lpTokenAddresses })\r\n        this.setState({ lpTokenPairAs })\r\n        this.setState({ lpTokenPairBs })\r\n        this.setState({ lpTokenPairsymbols })\r\n      }\r\n    }\r\n    // ##############################################################################################################################\r\n    else {\r\n      // Load PurseTokenUpgradable\r\n      const purseTokenUpgradableData = PurseTokenUpgradable.networks[networkId]\r\n      const restakingFarmData = RestakingFarm.networks[networkId]\r\n      if (purseTokenUpgradableData) {\r\n        let purseTokenUpgradableBalance = await this.state.purseTokenUpgradable.methods.balanceOf(this.state.account).call()\r\n        this.setState({ purseTokenUpgradableBalance: purseTokenUpgradableBalance.toString() })\r\n        let purseTokenTotalSupply = await this.state.purseTokenUpgradable.methods.totalSupply().call()\r\n        this.setState({ purseTokenTotalSupply: purseTokenTotalSupply.toString() })\r\n        let poolRewardToken = await this.state.purseTokenUpgradable.methods.balanceOf(restakingFarmData.address).call()\r\n        this.setState({ poolRewardToken })\r\n      }\r\n      // Load RestakingFarm\r\n      if (restakingFarmData) {\r\n        let totalpendingReward = 0\r\n        let userSegmentInfo = [[], []]\r\n        let lpTokenSegmentBalance = [[], []]\r\n        let lpTokenSegmentAllowance = [[], []]\r\n        let pendingSegmentReward = [[], []]\r\n        let n = 0\r\n        let i = 0\r\n\r\n        for (i = 0; i < this.state.poolLength; i++) {\r\n\r\n          let userInfo = await this.state.restakingFarm.methods.userInfo(this.state.lpTokenAddresses[i], this.state.account).call()\r\n          let lpTokenPair = new web3Bsc.eth.Contract(IPancakePair.abi, this.state.lpTokenAddresses[i])\r\n          let lpTokenBalance = await lpTokenPair.methods.balanceOf(this.state.account).call()\r\n          let lpTokenAllowance = await lpTokenPair.methods.allowance(this.state.account, restakingFarmData.address).call()\r\n          let pendingReward = await this.state.restakingFarm.methods.pendingReward(this.state.lpTokenAddresses[i], this.state.account).call()\r\n\r\n          totalpendingReward += parseInt(pendingReward)\r\n\r\n          if (this.state.lpTokenPairsymbols[i] == \"Cake-LP\") {\r\n\r\n            userSegmentInfo[0][n] = web3Bsc.utils.fromWei(userInfo.amount, 'Ether')\r\n            lpTokenSegmentBalance[0][n] = lpTokenBalance\r\n            lpTokenSegmentAllowance[0][n] = lpTokenAllowance\r\n            pendingSegmentReward[0][n] = web3Bsc.utils.fromWei(pendingReward, 'Ether')\r\n            n += 1\r\n          } else {\r\n            userSegmentInfo[1][n] = web3Bsc.utils.fromWei(userInfo.amount, 'Ether')\r\n            lpTokenSegmentBalance[1][n] = lpTokenBalance\r\n            lpTokenSegmentAllowance[1][n] = lpTokenAllowance\r\n            pendingSegmentReward[1][n] = web3Bsc.utils.fromWei(pendingReward, 'Ether')\r\n            n += 1\r\n          }\r\n        }\r\n\r\n        this.setState({ lpTokenSegmentBalance })\r\n        this.setState({ pendingSegmentReward })\r\n        this.setState({ lpTokenSegmentAllowance })\r\n        this.setState({ userSegmentInfo })\r\n        this.setState({ totalpendingReward: totalpendingReward.toLocaleString('fullwide', { useGrouping: false }) })\r\n      }\r\n    }\r\n    this.setState({ loading: true })\r\n    this.setState({ farmLoading: true })\r\n  }\r\n\r\n  // ***************************TVL & APR***********************************************************************\r\n  async loadTVLAPR() {\r\n    // Load bavaMasterFarmer\r\n    const networkId = \"97\"\r\n    const web3Bsc = window.web3Bsc\r\n    const restakingFarmData = RestakingFarm.networks[networkId]\r\n\r\n    let pendingSegmentReward = [[], []]\r\n    let lpTokenValue = [[], []]\r\n    let tvl = [[], []]\r\n    let apr = [[], []]\r\n    let n = 0\r\n\r\n    for (let i = 0; i < this.state.poolLength; i++) {\r\n      let lpTokenPair = new web3Bsc.eth.Contract(IPancakePair.abi, this.state.lpTokenAddresses[i])\r\n      let lpTokenInContract = await lpTokenPair.methods.balanceOf(restakingFarmData.address).call()\r\n      lpTokenInContract = web3Bsc.utils.fromWei(lpTokenInContract, \"ether\")\r\n      let lpTokenTSupply = await lpTokenPair.methods.totalSupply().call()\r\n      let lpTokenA = new web3Bsc.eth.Contract(LpToken.abi, this.state.lpTokenPairAs[i])\r\n      let lpTokenB = new web3Bsc.eth.Contract(LpToken.abi, this.state.lpTokenPairBs[i])\r\n      let lpTokenABalanceContract = await lpTokenA.methods.balanceOf(this.state.lpTokenAddresses[i]).call()\r\n      let lpTokenBBalanceContract = await lpTokenB.methods.balanceOf(this.state.lpTokenAddresses[i]).call()\r\n\r\n      let pendingReward = 0\r\n      let tokenAPrice = 0\r\n      let tokenBPrice = 0\r\n\r\n      if (this.state.lpTokenAsymbols[i] == \"PURSE\") {\r\n        tokenAPrice = this.state.PURSEPrice\r\n      } else if (this.state.lpTokenAsymbols[i] == \"mBNB\") {\r\n        tokenAPrice = this.state.BNBPrice\r\n      } else if (this.state.lpTokenAsymbols[i] == \"mBTC\") {\r\n        tokenAPrice = this.state.Price\r\n      } else if (this.state.lpTokenAsymbols[i] == \"mWETH\") {\r\n        tokenAPrice = this.state.WETHPrice\r\n      } else if (this.state.lpTokenAsymbols[i] == \"mUSDC\") {\r\n        tokenAPrice = this.state.USDCPrice\r\n      } else if (this.state.lpTokenAsymbols[i] == \"mBTC\") {\r\n        tokenAPrice = this.state.BTCPrice\r\n      }\r\n\r\n      if (this.state.lpTokenBsymbols[i] == \"PURSE\") {\r\n        tokenBPrice = this.state.PURSEPrice\r\n      } else if (this.state.lpTokenBsymbols[i] == \"mBNB\") {\r\n        tokenBPrice = this.state.BNBPrice\r\n      } else if (this.state.lpTokenBsymbols[i] == \"mBTC\") {\r\n        tokenBPrice = this.state.Price\r\n      } else if (this.state.lpTokenBsymbols[i] == \"mWETH\") {\r\n        tokenBPrice = this.state.WETHPrice\r\n      } else if (this.state.lpTokenBsymbols[i] == \"mUSDC\") {\r\n        tokenBPrice = this.state.USDCPrice\r\n      } else if (this.state.lpTokenBsymbols[i] == \"mBTC\") {\r\n        tokenBPrice = this.state.BTCPrice\r\n      }\r\n\r\n      if (this.state.lpTokenPairsymbols[i] == \"Cake-LP\") {\r\n        pendingSegmentReward[0][n] = pendingReward\r\n        lpTokenValue[0][n] = ((lpTokenABalanceContract * tokenAPrice) + (lpTokenBBalanceContract * tokenBPrice)) / lpTokenTSupply\r\n        tvl[0][n] = lpTokenValue[0][n] * lpTokenInContract\r\n        apr[0][n] = ((28000 * 365 * web3Bsc.utils.fromWei((this.state.poolSegmentInfo[0][i].pursePerBlock * this.state.bonusMultiplier[0][i]).toString(), 'Ether') * this.state.PURSEPrice) / tvl[0][n]) * 100\r\n        n += 1\r\n      } else {\r\n        pendingSegmentReward[1][n] = pendingReward\r\n        lpTokenValue[1][n] = ((lpTokenABalanceContract * tokenAPrice) + (lpTokenBBalanceContract * tokenBPrice)) / lpTokenTSupply\r\n        tvl[1][n] = lpTokenValue[1][n] * lpTokenInContract\r\n        apr[1][n] = ((28000 * 365 * web3Bsc.utils.fromWei((this.state.poolSegmentInfo[1][i].pursePerBlock * this.state.bonusMultiplier[1][i]).toString(), 'Ether') * this.state.PURSEPrice) / tvl[1][n]) * 100\r\n        n += 1\r\n      }\r\n    }\r\n    this.setState({ tvl })\r\n    this.setState({ apr })\r\n    this.setState({ aprloading: true })\r\n  }\r\n\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      // await window.ethereum.enable()\r\n      this.setState({ metamask: true })\r\n      // console.log(window.ethereum.isConnected())\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n      this.setState({ metamask: true })\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n      this.setState({ metamask: false })\r\n      this.setState({ wallet: false })\r\n    }\r\n    window.web3Bsc = new Web3(`https://data-seed-prebsc-1-s3.binance.org:8545/`);\r\n    // window.web3Bsc = new Web3(`https://bsc-dataseed.binance.org/`);\r\n    let response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=binancecoin%2Cweth%2Cbinance-usd%2Cusd-coin%2Ctether%2Cbitcoin%2Cpundi-x-purse&vs_currencies=usd`);\r\n    // let purseResponse = await fetch('https://api.pancakeswap.info/api/v2/tokens/0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C')\r\n    // let purseResponse = await fetch('https://api.1inch.exchange/v4.0/56/quote?fromTokenAddress=0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C&toTokenAddress=0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56&amount=1000000000000')\r\n    const myJson = await response.json();\r\n    // const purseJson = await purseResponse.json();\r\n    let PURSEPrice = myJson[\"pundi-x-purse\"][\"usd\"]\r\n    this.setState({ PURSEPrice: PURSEPrice.toFixed(10) })\r\n    let USDTPrice = myJson[\"tether\"][\"usd\"]\r\n    this.setState({ USDTPrice: USDTPrice.toFixed(10) })\r\n    let USDCPrice = myJson[\"usd-coin\"][\"usd\"]\r\n    this.setState({ USDCPrice: USDCPrice.toFixed(10) })\r\n    let BNBPrice = myJson[\"binancecoin\"][\"usd\"]\r\n    this.setState({ BNBPrice: BNBPrice.toFixed(10) })\r\n    let WETHPrice = myJson[\"weth\"][\"usd\"]\r\n    this.setState({ WETHPrice: WETHPrice.toFixed(10) })\r\n    let BUSDPrice = myJson[\"binance-usd\"][\"usd\"]\r\n    this.setState({ BUSDPrice: BUSDPrice.toFixed(10) })\r\n    let BTCPrice = myJson[\"bitcoin\"][\"usd\"]\r\n    this.setState({ BTCPrice: BTCPrice.toFixed(10) })\r\n    this.setState({ loading: true })\r\n  }\r\n\r\n  connectWallet = () => {\r\n    if (this.state.metamask == true) {\r\n      window.ethereum\r\n        .request({ method: 'eth_requestAccounts' })\r\n        .then(async () => {\r\n          await this.switchNetwork()\r\n          const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n          if (chainId == \"0x61\") {\r\n            this.setWalletTrigger(true)\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          if (err.code === 4001) {\r\n            // EIP-1193 userRejectedRequest error\r\n            // If this happens, the user rejected the connection request.\r\n            console.log('Please connect to MetaMask.');\r\n          } else {\r\n            console.error(\"error\");\r\n            console.error(err);\r\n          }\r\n        });\r\n      // this.componentWillMount()\r\n    } else {\r\n      alert(\"No provider was found\")\r\n    }\r\n  }\r\n\r\n  WalletConnect = async () => {\r\n    const provider = new WalletConnectProvider({\r\n      rpc: {\r\n        97: `https://data-seed-prebsc-1-s3.binance.org:8545/`\r\n      },\r\n      chainId: 97,\r\n      // chainId: 56,\r\n    });\r\n    window.provider = provider\r\n    console.log(window.provider)\r\n    await window.provider.enable();\r\n    window.web3Con = await new Web3(window.provider);\r\n    const networkId = await window.web3Con.eth.net.getId();\r\n    if (networkId != 97) {\r\n      alert(\"You're connected to an unsupported network.\")\r\n      this.WalletDisconnect()\r\n    } else {\r\n      const accounts = await window.web3Con.eth.getAccounts();\r\n      this.setState({ account: accounts[0] })\r\n      const first4Account = this.state.account.substring(0, 4)\r\n      const last4Account = this.state.account.slice(-4)\r\n      this.setState({ first4Account: first4Account })\r\n      this.setState({ last4Account: last4Account })\r\n      this.setState({ walletConnect: true })\r\n    }\r\n\r\n    // Subscribe to accounts change\r\n    window.provider.on(\"accountsChanged\", this.handleAccountsChanged);\r\n\r\n    // Subscribe to session disconnection\r\n    // window.provider.on(\"disconnect\", () => {\r\n    //   this.WalletDisconnect()\r\n    //   window.provider.stop(\"disconnect\", ()=> console.log(\"exit\"))\r\n    // });\r\n\r\n  }\r\n\r\n  WalletDisconnect = async () => {\r\n    await window.provider.disconnect()\r\n    this.setState({ walletConnect: false })\r\n    this.setState({ pendingSegmentReward: [[], []] })\r\n    this.setState({ userSegmentInfo: [[], []] })\r\n    this.setState({ totalpendingReward: \"0\" })\r\n  }\r\n\r\n  switchNetwork = async () => {\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: '0x61' }],\r\n      });\r\n    } catch (switchError) {\r\n      // console.log(switchError.code)\r\n      // This error code indicates that the chain has not been added to MetaMask.\r\n      if (switchError.code === 4902) {\r\n        try {\r\n          // console.log(switchError.code)\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{\r\n              chainId: '0x61', rpcUrls: ['https://data-seed-prebsc-1-s3.binance.org:8545'], chainName: 'BSC Testnet',\r\n              nativeCurrency: {\r\n                name: 'BNB',\r\n                symbol: 'BNB', // 2-6 characters long\r\n                decimals: 18\r\n              }, blockExplorerUrls: ['https://testnet.bscscan.com/']\r\n            }],\r\n          });\r\n          const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n          console.log(\"switched\")\r\n          this.setState({ chainId })\r\n          if (this.state.chainId == \"0x61\") {\r\n            this.setState({ networkName: \"BSC Testnet\" })\r\n          } else if (this.state.chainId == \"0x38\") {\r\n            this.setState({ networkName: \"BSC\" })\r\n          } else if (this.state.chainId == \"0x1\") {\r\n            this.setState({ networkName: \"Ethereum\" })\r\n          } else if (this.state.chainId == \"0x3\") {\r\n            this.setState({ networkName: \"Ropsten\" })\r\n          } else if (this.state.chainId == \"0x4\") {\r\n            this.setState({ networkName: \"Rinkeby\" })\r\n          } else if (this.state.chainId == \"0x2a\") {\r\n            this.setState({ networkName: \"Kovan\" })\r\n          } else if (this.state.chainId == \"0x89\") {\r\n            this.setState({ networkName: \"Polygon\" })\r\n          } else if (this.state.chainId == \"0x13881\") {\r\n            this.setState({ networkName: \"Mumbai\" })\r\n          } else if (this.state.chainId == \"0xa869\") {\r\n            this.setState({ networkName: \"Fuji\" })\r\n          } else if (this.state.chainId == \"0xa86a\") {\r\n            this.setState({ networkName: \"Avalanche\" })\r\n          }\r\n        } catch (addError) {\r\n          // handle \"add\" error\r\n        }\r\n      }\r\n      // handle other \"switch\" errors\r\n    }\r\n  }\r\n\r\n\r\n  handleAccountsChanged = (accounts) => {\r\n    if (accounts.length === 0) {\r\n      // MetaMask is locked or the user has not connected any accounts\r\n      // console.log('Please connect to MetaMask.');\r\n      console.log(accounts)\r\n      this.setWalletTrigger(false)\r\n    } else if (accounts[0] !== this.state.account) {\r\n      console.log(accounts)\r\n      this.state.account = accounts[0];\r\n      const first4Account = this.state.account.substring(0, 4)\r\n      const last4Account = this.state.account.slice(-4)\r\n      this.setState({ first4Account: first4Account })\r\n      this.setState({ last4Account: last4Account })\r\n      // Do any other work!\r\n    }\r\n  }\r\n\r\n  handleChainChanged = async (chainId) => {\r\n    // We recommend reloading the page, unless you must do otherwise\r\n    // window.location.reload();\r\n    console.log(chainId)\r\n    if (chainId != \"0x61\") {\r\n      this.setWalletTrigger(false)\r\n    }\r\n    if (this.state.networkId !== chainId) {\r\n      this.state.networkId = chainId\r\n      const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n      this.setState({ chainId })\r\n      if (this.state.chainId == \"0x61\") {\r\n        this.setState({ networkName: \"BSC Testnet\" })\r\n      } else if (this.state.chainId == \"0x38\") {\r\n        this.setState({ networkName: \"BSC\" })\r\n      } else if (this.state.chainId == \"0x1\") {\r\n        this.setState({ networkName: \"Ethereum\" })\r\n      } else if (this.state.chainId == \"0x3\") {\r\n        this.setState({ networkName: \"Ropsten\" })\r\n      } else if (this.state.chainId == \"0x4\") {\r\n        this.setState({ networkName: \"Rinkeby\" })\r\n      } else if (this.state.chainId == \"0x2a\") {\r\n        this.setState({ networkName: \"Kovan\" })\r\n      } else if (this.state.chainId == \"0x89\") {\r\n        this.setState({ networkName: \"Polygon\" })\r\n      } else if (this.state.chainId == \"0x13881\") {\r\n        this.setState({ networkName: \"Mumbai\" })\r\n      } else if (this.state.chainId == \"0xa869\") {\r\n        this.setState({ networkName: \"Fuji\" })\r\n      } else if (this.state.chainId == \"0xa86a\") {\r\n        this.setState({ networkName: \"Avalanche\" })\r\n      }\r\n      this.switchNetwork()\r\n      // Run any other necessary logic...\r\n    }\r\n\r\n  }\r\n\r\n  delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n  deposit = async (i, amount, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      console.log(\"abc\")\r\n      this.setState({ loading: false })\r\n      let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      await restakingFarm.methods.deposit(lpTokenAddress, amount).send({ from: this.state.account }).then(async (result) => {\r\n        let userInfo = await this.state.restakingFarm.methods.userInfo(lpTokenAddress, this.state.account).call()\r\n        let lpTokenPair = new window.web3Bsc.eth.Contract(IPancakePair.abi, lpTokenAddress)\r\n        let lpTokenBalance = await lpTokenPair.methods.balanceOf(this.state.account).call()\r\n        let purseTokenUpgradableBalance = await this.state.purseTokenUpgradable.methods.balanceOf(this.state.account).call()\r\n        let pendingReward = await this.state.restakingFarm.methods.pendingReward(lpTokenAddress, this.state.account).call()\r\n\r\n        this.state.userSegmentInfo[n][i] = window.web3Bsc.utils.fromWei(userInfo.amount, 'Ether')\r\n        this.state.lpTokenSegmentBalance[n][i] = lpTokenBalance\r\n        this.state.purseTokenUpgradableBalance = purseTokenUpgradableBalance\r\n        this.state.pendingSegmentReward[n][i] = window.web3Bsc.utils.fromWei(pendingReward, 'ether')\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    } else if (this.state.wallet == true) {\r\n      console.log(\"efg\")\r\n      this.setState({ loading: false })\r\n      let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n      console.log(this.state.restakingFarm)\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      await restakingFarm.methods.deposit(lpTokenAddress, amount).send({ from: this.state.account }).then(async (result) => {\r\n        let userInfo = await this.state.restakingFarm.methods.userInfo(lpTokenAddress, this.state.account).call()\r\n        let lpTokenPair = new window.web3Bsc.eth.Contract(IPancakePair.abi, lpTokenAddress)\r\n        let lpTokenBalance = await lpTokenPair.methods.balanceOf(this.state.account).call()\r\n        let purseTokenUpgradableBalance = await this.state.purseTokenUpgradable.methods.balanceOf(this.state.account).call()\r\n        let pendingReward = await this.state.restakingFarm.methods.pendingReward(lpTokenAddress, this.state.account).call()\r\n\r\n        this.state.userSegmentInfo[n][i] = window.web3Bsc.utils.fromWei(userInfo.amount, 'Ether')\r\n        this.state.lpTokenSegmentBalance[n][i] = lpTokenBalance\r\n        this.state.purseTokenUpgradableBalance = purseTokenUpgradableBalance\r\n        this.state.pendingSegmentReward[n][i] = window.web3Bsc.utils.fromWei(pendingReward, 'ether')\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    }\r\n    console.log(\"done\")\r\n    this.setState({ loading: true })\r\n    this.componentWillMount()\r\n  }\r\n\r\n  approve = async (i, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      this.setState({ loading: false })\r\n      let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n      let lpToken = new window.web3Con.eth.Contract(LpToken.abi, lpTokenAddress)\r\n      console.log(lpToken)\r\n      console.log(this.state.account)\r\n      console.log(this.state.restakingFarm)\r\n      await lpToken.methods.approve(this.state.restakingFarm._address, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: this.state.account }).then(async (result) => {\r\n        let lpTokenPair = new window.web3Bsc.eth.Contract(IPancakePair.abi, lpTokenAddress)\r\n        let lpTokenAllowance = await lpTokenPair.methods.allowance(this.state.account, this.state.restakingFarm._address).call()\r\n        this.state.lpTokenSegmentAllowance[n][i] = lpTokenAllowance\r\n      })\r\n      this.componentWillMount()\r\n      this.setState({ loading: true })\r\n    } else if (this.state.wallet == true) {\r\n      this.setState({ loading: false })\r\n      let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n      let lpToken = new window.web3.eth.Contract(LpToken.abi, lpTokenAddress)\r\n      console.log(lpToken)\r\n      console.log(this.state.account)\r\n      console.log(this.state.restakingFarm)\r\n      await lpToken.methods.approve(this.state.restakingFarm._address, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: this.state.account }).then(async (result) => {\r\n        let lpTokenPair = new window.web3Bsc.eth.Contract(IPancakePair.abi, lpTokenAddress)\r\n        let lpTokenAllowance = await lpTokenPair.methods.allowance(this.state.account, this.state.restakingFarm._address).call()\r\n        this.state.lpTokenSegmentAllowance[n][i] = lpTokenAllowance\r\n      })\r\n      this.componentWillMount()\r\n      this.setState({ loading: true })\r\n    }\r\n  }\r\n\r\n  withdraw = async (i, amount, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      this.setState({ loading: false })\r\n      let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      restakingFarm.methods.withdraw(lpTokenAddress, amount).send({ from: this.state.account }).then(async (result) => {\r\n        let userInfo = await this.state.restakingFarm.methods.userInfo(lpTokenAddress, this.state.account).call()\r\n        let lpTokenPair = new window.web3Bsc.eth.Contract(IPancakePair.abi, lpTokenAddress)\r\n        let lpTokenBalance = await lpTokenPair.methods.balanceOf(this.state.account).call()\r\n        let purseTokenUpgradableBalance = await this.state.purseTokenUpgradable.methods.balanceOf(this.state.account).call()\r\n        let pendingReward = await this.state.restakingFarm.methods.pendingReward(lpTokenAddress, this.state.account).call()\r\n\r\n        this.state.userSegmentInfo[n][i] = window.web3Bsc.utils.fromWei(userInfo.amount, 'Ether')\r\n        this.state.lpTokenSegmentBalance[n][i] = lpTokenBalance\r\n        this.state.purseTokenUpgradableBalance = purseTokenUpgradableBalance\r\n        this.state.pendingSegmentReward[n][i] = window.web3Bsc.utils.fromWei(pendingReward, 'ether')\r\n        this.setState({ loading: true })\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    } else if (this.state.wallet == true) {\r\n      this.setState({ loading: false })\r\n      let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      restakingFarm.methods.withdraw(lpTokenAddress, amount).send({ from: this.state.account }).then(async (result) => {\r\n        let userInfo = await this.state.restakingFarm.methods.userInfo(lpTokenAddress, this.state.account).call()\r\n        let lpTokenPair = new window.web3Bsc.eth.Contract(IPancakePair.abi, lpTokenAddress)\r\n        let lpTokenBalance = await lpTokenPair.methods.balanceOf(this.state.account).call()\r\n        let purseTokenUpgradableBalance = await this.state.purseTokenUpgradable.methods.balanceOf(this.state.account).call()\r\n        let pendingReward = await this.state.restakingFarm.methods.pendingReward(lpTokenAddress, this.state.account).call()\r\n\r\n        this.state.userSegmentInfo[n][i] = window.web3Bsc.utils.fromWei(userInfo.amount, 'Ether')\r\n        this.state.lpTokenSegmentBalance[n][i] = lpTokenBalance\r\n        this.state.purseTokenUpgradableBalance = purseTokenUpgradableBalance\r\n        this.state.pendingSegmentReward[n][i] = window.web3Bsc.utils.fromWei(pendingReward, 'ether')\r\n        this.setState({ loading: true })\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  harvest = async (i, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      if (this.state.pendingSegmentReward[n][i] <= 0) {\r\n        alert(\"No token to harvest! Please deposit PANCAKE LP to earn PURSE\")\r\n      } else {\r\n        this.setState({ loading: false })\r\n        const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n        let restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n        let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n        restakingFarm.methods.claimReward(lpTokenAddress).send({ from: this.state.account }).then(async (result) => {\r\n          let purseTokenUpgradableBalance = await this.state.purseTokenUpgradable.methods.balanceOf(this.state.account).call()\r\n          this.state.purseTokenUpgradableBalance = purseTokenUpgradableBalance\r\n          let pendingReward = await this.state.restakingFarm.methods.pendingReward(lpTokenAddress, this.state.account).call()\r\n          this.state.pendingSegmentReward[n][i] = window.web3.utils.fromWei(pendingReward, 'ether')\r\n          this.componentWillMount()\r\n        }).catch((err) => {\r\n          if (err.code === 4001) {\r\n            // EIP-1193 userRejectedRequest error\r\n            // If this happens, the user rejected the connection request.\r\n            alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n          } else {\r\n            console.error(err);\r\n          }\r\n        });\r\n      }\r\n      this.setState({ loading: true })\r\n    } else if (this.state.wallet == true) {\r\n      if (this.state.pendingSegmentReward[n][i] <= 0) {\r\n        alert(\"No token to harvest! Please deposit PANCAKE LP to earn PURSE\")\r\n      } else {\r\n        this.setState({ loading: false })\r\n        const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n        let restakingFarm = new window.web3.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n        let lpTokenAddress = await this.state.poolSegmentInfo[n][i].lpToken\r\n        restakingFarm.methods.claimReward(lpTokenAddress).send({ from: this.state.account }).then(async (result) => {\r\n          let purseTokenUpgradableBalance = await this.state.purseTokenUpgradable.methods.balanceOf(this.state.account).call()\r\n          this.state.purseTokenUpgradableBalance = purseTokenUpgradableBalance\r\n          let pendingReward = await this.state.restakingFarm.methods.pendingReward(lpTokenAddress, this.state.account).call()\r\n          this.state.pendingSegmentReward[n][i] = window.web3.utils.fromWei(pendingReward, 'ether')\r\n          this.componentWillMount()\r\n        }).catch((err) => {\r\n          if (err.code === 4001) {\r\n            // EIP-1193 userRejectedRequest error\r\n            // If this happens, the user rejected the connection request.\r\n            alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n          } else {\r\n            console.error(err);\r\n          }\r\n        });\r\n      }\r\n      this.setState({ loading: true })\r\n    } else {\r\n      alert(\"Wallet is not connected\")\r\n    }\r\n  }\r\n\r\n  setI = (type, pair) => {\r\n    this.setState({ n: type })\r\n    this.setState({ i: pair })\r\n  }\r\n\r\n  setTrigger = (state) => {\r\n    this.setState({ buttonPopup: state })\r\n  }\r\n\r\n  setWalletTrigger = async (state) => {\r\n    if (state == false) {\r\n      await this.setState({ wallet: state })\r\n      this.setState({ pendingSegmentReward: [[], []] })\r\n      this.setState({ userSegmentInfo: [[], []] })\r\n      this.setState({ totalpendingReward: \"0\" })\r\n    } else {\r\n      const accounts = await window.web3.eth.getAccounts()\r\n      this.setState({ account: accounts[0] })\r\n      const first4Account = this.state.account.substring(0, 4)\r\n      const last4Account = this.state.account.slice(-4)\r\n      this.setState({ first4Account: first4Account })\r\n      this.setState({ last4Account: last4Account })\r\n      this.setState({ wallet: state })\r\n      // console.log(this.state.wallet)\r\n    }\r\n  }\r\n\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      lpToken: {},\r\n      purseTokenUpgradable: {},\r\n      restakingFarm: {},\r\n      purseTokenUpgradableBalance: '0',\r\n      purseTokenTotalSupply: '0',\r\n      i: '0',\r\n      n: '0',\r\n      loading: false,\r\n      wallet: false,\r\n      metamask: false,\r\n      farmLoading: false,\r\n      walletConnect: false,\r\n      aprloading: false,\r\n      poolLength: '0',\r\n      userSegmentInfo: [[], []],\r\n      poolSegmentInfo: [[], []],\r\n      lpTokenSegmentBalance: [[], []],\r\n      lpTokenSegmentAsymbol: [[], []],\r\n      lpTokenSegmentBsymbol: [[], []],\r\n      pendingSegmentReward: [[], []],\r\n      lpTokenSegmentAllowance: [[], []],\r\n      bonusMultiplier: [[], []],\r\n      tvl: [[], []],\r\n      apr: [[], []],\r\n      totalrewardperblock: '0',\r\n      totalpendingReward: '0',\r\n      buttonPopup: false,\r\n      poolCapRewardToken: '0',\r\n      poolMintedRewardToken: '0',\r\n      poolRewardToken: '0',\r\n      networkName: \"Loading\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let maincontent\r\n    let menucontent\r\n    let depositcontent\r\n    let oneinchcontent\r\n    if (this.state.loading == false) {\r\n      maincontent =\r\n        <div className=\"wrap\">\r\n          <div className=\"loading\">\r\n            <div className=\"bounceball\"></div>\r\n            <div className=\"textLoading\">NETWORK IS LOADING...</div>\r\n          </div>\r\n        </div>\r\n      depositcontent =\r\n        <div className=\"textLoadingSmall\">Loading...</div>\r\n      menucontent =\r\n        <div className=\"wrap\">\r\n          <div className=\"loading\">\r\n            <div className=\"bounceball\"></div>\r\n            <div className=\"textLoading\">NETWORK IS LOADING...</div>\r\n          </div>\r\n        </div>\r\n    } else {\r\n      maincontent = <Main\r\n        lpTokenBalance={this.state.lpTokenBalance}\r\n        purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n        poolLength={this.state.poolLength}\r\n        deposit={this.deposit}\r\n        withdraw={this.withdraw}\r\n        purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n        lpTokenInContract={this.state.lpTokenInContract}\r\n        totalrewardperblock={this.state.totalrewardperblock}\r\n        poolCapRewardToken={this.state.poolCapRewardToken}\r\n        poolMintedRewardToken={this.state.poolMintedRewardToken}\r\n        poolRewardToken={this.state.poolRewardToken}\r\n      />\r\n      menucontent = <Menu\r\n        lpTokenBalance={this.state.lpTokenBalance}\r\n        purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n        deposit={this.deposit}\r\n        withdraw={this.withdraw}\r\n        setI={this.setI}\r\n        purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n        totalpendingReward={this.state.totalpendingReward}\r\n        totalrewardperblock={this.state.totalrewardperblock}\r\n        userSegmentInfo={this.state.userSegmentInfo}\r\n        poolSegmentInfo={this.state.poolSegmentInfo}\r\n        lpTokenSegmentBalance={this.state.lpTokenSegmentBalance}\r\n        lpTokenSegmentAsymbol={this.state.lpTokenSegmentAsymbol}\r\n        lpTokenSegmentBsymbol={this.state.lpTokenSegmentBsymbol}\r\n        pendingSegmentReward={this.state.pendingSegmentReward}\r\n        buttonPopup={this.state.buttonPopup}\r\n        setTrigger={this.setTrigger}\r\n        harvest={this.harvest}\r\n        tvl={this.state.tvl}\r\n        apr={this.state.apr}\r\n        bonusMultiplier={this.state.bonusMultiplier}\r\n        farmLoading={this.state.farmLoading}\r\n        aprloading={this.state.aprloading}\r\n      />\r\n      depositcontent = <Deposit\r\n        lpTokenBalance={this.state.lpTokenBalance}\r\n        purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n        deposit={this.deposit}\r\n        withdraw={this.withdraw}\r\n        i={this.state.i}\r\n        n={this.state.n}\r\n        userSegmentInfo={this.state.userSegmentInfo}\r\n        poolSegmentInfo={this.state.poolSegmentInfo}\r\n        lpTokenSegmentBalance={this.state.lpTokenSegmentBalance}\r\n        lpTokenSegmentAsymbol={this.state.lpTokenSegmentAsymbol}\r\n        lpTokenSegmentBsymbol={this.state.lpTokenSegmentBsymbol}\r\n        pendingSegmentReward={this.state.pendingSegmentReward}\r\n        lpTokenSegmentAllowance={this.state.lpTokenSegmentAllowance}\r\n        wallet={this.state.wallet}\r\n        harvest={this.harvest}\r\n        approve={this.approve}\r\n        connectWallet={this.connectWallet}\r\n        walletConnect={this.state.walletConnect}\r\n      />\r\n      oneinchcontent = <Oneinch\r\n        lpTokenBalance={this.state.lpTokenBalance}\r\n        purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n        deposit={this.deposit}\r\n        withdraw={this.withdraw}\r\n        setI={this.setI}\r\n        purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n        totalpendingReward={this.state.totalpendingReward}\r\n        totalrewardperblock={this.state.totalrewardperblock}\r\n        userSegmentInfo={this.state.userSegmentInfo}\r\n        poolSegmentInfo={this.state.poolSegmentInfo}\r\n        lpTokenSegmentBalance={this.state.lpTokenSegmentBalance}\r\n        lpTokenSegmentAsymbol={this.state.lpTokenSegmentAsymbol}\r\n        lpTokenSegmentBsymbol={this.state.lpTokenSegmentBsymbol}\r\n        pendingSegmentReward={this.state.pendingSegmentReward}\r\n        buttonPopup={this.state.buttonPopup}\r\n        setTrigger={this.setTrigger}\r\n        harvest={this.harvest}\r\n        tvl={this.state.tvl}\r\n        apr={this.state.apr}\r\n        bonusMultiplier={this.state.bonusMultiplier}\r\n        farmLoading={this.state.farmLoading}\r\n        aprloading={this.state.aprloading}\r\n      />\r\n    }\r\n\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Navb\r\n            account={this.state.account}\r\n            first4Account={this.state.first4Account}\r\n            last4Account={this.state.last4Account}\r\n            wallet={this.state.wallet}\r\n            setWalletTrigger={this.setWalletTrigger}\r\n            loadWeb3={this.loadWeb3}\r\n            connectWallet={this.connectWallet}\r\n            WalletConnect={this.WalletConnect}\r\n            walletConnect={this.state.walletConnect}\r\n            WalletDisconnect={this.WalletDisconnect}\r\n            networkName={this.state.networkName}\r\n            PURSEPrice={this.state.PURSEPrice}\r\n          />\r\n\r\n          <div className=\"container-fluid mt-5\">\r\n            <div className=\"row\">\r\n              <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '800px' }}>\r\n                <div className=\"content mr-auto ml-auto\">\r\n                  <Switch>\r\n                    <Route path=\"/\" exact > {maincontent} </Route>\r\n                    <Route path=\"/home\" exact > {maincontent} </Route>\r\n                    <Route path=\"/menu\" exact > {menucontent} </Route>\r\n                    <Route path=\"/deposit\" exact > {depositcontent} </Route>\r\n                    <Route path=\"/oneinch/\" exact > {oneinchcontent} </Route>\r\n                  </Switch>\r\n                  <Popup trigger={this.state.buttonPopup} setTrigger={this.setTrigger}>\r\n                    <div className=\"container-fluid mt-5\">{depositcontent}</div>\r\n                  </Popup>\r\n                </div>\r\n              </main>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}